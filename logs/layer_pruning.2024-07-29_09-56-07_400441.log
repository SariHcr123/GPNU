2024-07-29 09:56:07.685 | ERROR    | __main__:<module>:93 - An error has been caught in function '<module>', process 'MainProcess' (19644), thread 'MainThread' (13112):
Traceback (most recent call last):

> File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 93, in <module>
    layer_pruning('../runs/train/exp/weights/best.pt')
    ©¸ <function layer_pruning at 0x00000212F72FB790>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 40, in layer_pruning
    model, ckpt = attempt_load(weights, map_location=device)
                  ©¦            ©¦                     ©¸ device(type='cpu')
                  ©¦            ©¸ '../runs/train/exp/weights/best.pt'
                  ©¸ <function attempt_load at 0x00000212FF625B80>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 14, in attempt_load
    ckpt = torch.load(weights, map_location=map_location)  # load
           ©¦     ©¦    ©¦                     ©¸ device(type='cpu')
           ©¦     ©¦    ©¸ '../runs/train/exp/weights/best.pt'
           ©¦     ©¸ <function load at 0x00000212B64E3550>
           ©¸ <module 'torch' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\__init__.py'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 997, in load
    with _open_file_like(f, 'rb') as opened_file:
         ©¦               ©¸ '../runs/train/exp/weights/best.pt'
         ©¸ <function _open_file_like at 0x00000212B64DA8B0>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 444, in _open_file_like
    return _open_file(name_or_buffer, mode)
           ©¦          ©¦               ©¸ 'rb'
           ©¦          ©¸ '../runs/train/exp/weights/best.pt'
           ©¸ <class 'torch.serialization._open_file'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 425, in __init__
    super().__init__(open(name, mode))
                          ©¦     ©¸ 'rb'
                          ©¸ '../runs/train/exp/weights/best.pt'

FileNotFoundError: [Errno 2] No such file or directory: '../runs/train/exp/weights/best.pt'
2024-07-29 09:57:58.173 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=1296]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=6912]
8232 parameters will be pruned
-------------

2024-07-29 09:57:58.176 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(20, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=4500]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=800]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=800]
6150 parameters will be pruned
-------------

2024-07-29 09:57:58.177 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(39, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=468]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=3456]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=384]
5124 parameters will be pruned
-------------

2024-07-29 09:57:58.179 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(39, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=468]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 20, 52])>, Index=[25, 26, 29, 31, 33, 34, 35, 38, 42, 45, 47, 48], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[25, 26, 29, 31, 33, 34, 35, 38, 42, 45, 47, 48], NumPruned=768]
1260 parameters will be pruned
-------------

2024-07-29 09:57:58.180 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(40, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=1000]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=28800]
29850 parameters will be pruned
-------------

2024-07-29 09:57:58.181 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(39, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=17901]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=3264]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=3264]
24531 parameters will be pruned
-------------

2024-07-29 09:57:58.183 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(77, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1925]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=14400]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=14400]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1600]
37275 parameters will be pruned
-------------

2024-07-29 09:57:58.185 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(77, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=1925]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 39, 103])>, Index=[40, 44, 45, 50, 53, 55, 57, 61, 63, 65, 66, 70, 71, 77, 79, 80, 81, 83, 84, 91, 96, 97, 99, 101, 102], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(103, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[40, 44, 45, 50, 53, 55, 57, 61, 63, 65, 66, 70, 71, 77, 79, 80, 81, 83, 84, 91, 96, 97, 99, 101, 102], NumPruned=3200]
5175 parameters will be pruned
-------------

2024-07-29 09:57:58.186 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(78, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=3978]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=3264]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=3264]
128112 parameters will be pruned
-------------

2024-07-29 09:57:58.187 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(77, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=70686]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=13056]
97002 parameters will be pruned
-------------

2024-07-29 09:57:58.189 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(154, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=7854]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
217158 parameters will be pruned
-------------

2024-07-29 09:57:58.192 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(154, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=7854]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 77, 205])>, Index=[79, 80, 81, 84, 85, 87, 95, 96, 100, 106, 108, 109, 110, 112, 115, 118, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 138, 144, 148, 150, 151, 152, 153, 155, 157, 159, 163, 166, 168, 171, 173, 176, 179, 181, 182, 189, 192, 199, 200, 202, 204], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(205, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[79, 80, 81, 84, 85, 87, 95, 96, 100, 106, 108, 109, 110, 112, 115, 118, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 138, 144, 148, 150, 151, 152, 153, 155, 157, 159, 163, 166, 168, 171, 173, 176, 179, 181, 182, 189, 192, 199, 200, 202, 204], NumPruned=13056]
21012 parameters will be pruned
-------------

2024-07-29 09:57:58.193 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(154, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=15708]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=470016]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=13056]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=13056]
512040 parameters will be pruned
-------------

2024-07-29 09:57:58.200 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(154, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=282744]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=52224]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=52224]
387600 parameters will be pruned
-------------

2024-07-29 09:57:58.206 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=52224]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=26112]
345168 parameters will be pruned
-------------

2024-07-29 09:57:58.214 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 154, 410])>, Index=[154, 157, 158, 160, 166, 168, 169, 171, 172, 173, 179, 180, 184, 186, 194, 197, 198, 200, 201, 208, 209, 210, 212, 217, 218, 219, 221, 222, 223, 225, 230, 232, 234, 237, 243, 245, 248, 249, 250, 252, 260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 277, 279, 287, 288, 289, 292, 297, 300, 302, 305, 307, 308, 309, 316, 319, 325, 326, 330, 332, 335, 338, 339, 340, 341, 342, 343, 345, 351, 352, 353, 356, 358, 362, 364, 367, 370, 371, 372, 373, 375, 379, 382, 383, 389, 391, 397, 399, 402, 409], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(410, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[154, 157, 158, 160, 166, 168, 169, 171, 172, 173, 179, 180, 184, 186, 194, 197, 198, 200, 201, 208, 209, 210, 212, 217, 218, 219, 221, 222, 223, 225, 230, 232, 234, 237, 243, 245, 248, 249, 250, 252, 260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 277, 279, 287, 288, 289, 292, 297, 300, 302, 305, 307, 308, 309, 316, 319, 325, 326, 330, 332, 335, 338, 339, 340, 341, 342, 343, 345, 351, 352, 353, 356, 358, 362, 364, 367, 370, 371, 372, 373, 375, 379, 382, 383, 389, 391, 397, 399, 402, 409], NumPruned=52224]
83844 parameters will be pruned
-------------

2024-07-29 09:57:58.216 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(308, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=62832]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=52224]
115464 parameters will be pruned
-------------

2024-07-29 09:57:58.221 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254, 258, 263, 265, 266, 268, 273, 274, 275, 279, 285, 287, 288, 289, 291, 292, 293, 294, 298, 300, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 319, 325, 330, 331, 333, 335, 336, 337, 340, 341, 343, 344, 347, 352, 355, 358, 359, 360, 364, 367, 373, 374, 379, 382, 383, 384, 385, 388, 389, 390, 394, 397, 403, 405, 408, 414, 415, 417, 418, 423, 425, 426, 427, 428, 429, 432, 433, 435, 440, 442, 444, 449, 452, 455, 457, 463, 464, 465, 466, 467, 468, 471, 472, 474, 477, 481, 482, 489, 493, 502, 503, 510, 514, 519, 521, 522, 524, 529, 530, 531, 535, 541, 543, 544, 545, 547, 548, 549, 550, 554, 556, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 581, 586, 587, 589, 591, 592, 593, 596, 597, 599, 600, 603, 608, 611, 614, 615, 616, 620, 623, 629, 630, 635, 638, 639, 640, 641, 644, 645, 646, 650, 653, 659, 661, 664, 670, 671, 673, 674, 679, 681, 682, 683, 684, 685, 688, 689, 691, 696, 698, 700, 705, 708, 711, 713, 719, 720, 721, 722, 723, 724, 727, 728, 730, 733, 737, 738, 745, 749, 758, 759, 766, 770, 775, 777, 778, 780, 785, 786, 787, 791, 797, 799, 800, 801, 803, 804, 805, 806, 810, 812, 815, 817, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 837, 842, 843, 845, 847, 848, 849, 852, 853, 855, 856, 859, 864, 867, 870, 871, 872, 876, 879, 885, 886, 891, 894, 895, 896, 897, 900, 901, 902, 906, 909, 915, 917, 920, 926, 927, 929, 930, 935, 937, 938, 939, 940, 941, 944, 945, 947, 952, 954, 956, 961, 964, 967, 969, 975, 976, 977, 978, 979, 980, 983, 984, 986, 989, 993, 994, 1001, 1005, 1014, 1015, 1022], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254, 258, 263, 265, 266, 268, 273, 274, 275, 279, 285, 287, 288, 289, 291, 292, 293, 294, 298, 300, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 319, 325, 330, 331, 333, 335, 336, 337, 340, 341, 343, 344, 347, 352, 355, 358, 359, 360, 364, 367, 373, 374, 379, 382, 383, 384, 385, 388, 389, 390, 394, 397, 403, 405, 408, 414, 415, 417, 418, 423, 425, 426, 427, 428, 429, 432, 433, 435, 440, 442, 444, 449, 452, 455, 457, 463, 464, 465, 466, 467, 468, 471, 472, 474, 477, 481, 482, 489, 493, 502, 503, 510, 514, 519, 521, 522, 524, 529, 530, 531, 535, 541, 543, 544, 545, 547, 548, 549, 550, 554, 556, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 581, 586, 587, 589, 591, 592, 593, 596, 597, 599, 600, 603, 608, 611, 614, 615, 616, 620, 623, 629, 630, 635, 638, 639, 640, 641, 644, 645, 646, 650, 653, 659, 661, 664, 670, 671, 673, 674, 679, 681, 682, 683, 684, 685, 688, 689, 691, 696, 698, 700, 705, 708, 711, 713, 719, 720, 721, 722, 723, 724, 727, 728, 730, 733, 737, 738, 745, 749, 758, 759, 766, 770, 775, 777, 778, 780, 785, 786, 787, 791, 797, 799, 800, 801, 803, 804, 805, 806, 810, 812, 815, 817, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 837, 842, 843, 845, 847, 848, 849, 852, 853, 855, 856, 859, 864, 867, 870, 871, 872, 876, 879, 885, 886, 891, 894, 895, 896, 897, 900, 901, 902, 906, 909, 915, 917, 920, 926, 927, 929, 930, 935, 937, 938, 939, 940, 941, 944, 945, 947, 952, 954, 956, 961, 964, 967, 969, 975, 976, 977, 978, 979, 980, 983, 984, 986, 989, 993, 994, 1001, 1005, 1014, 1015, 1022], NumPruned=208896]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
240516 parameters will be pruned
-------------

2024-07-29 09:57:58.224 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(616, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=125664]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=52224]
178296 parameters will be pruned
-------------

2024-07-29 09:57:58.231 | INFO     | __main__:layer_pruning:76 -   Params: 7022326 => 4578517

2024-07-29 09:57:58.525 | ERROR    | __main__:<module>:93 - An error has been caught in function '<module>', process 'MainProcess' (27896), thread 'MainThread' (29504):
Traceback (most recent call last):

> File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 93, in <module>
    layer_pruning('../runs/train/exp4/weights/best.pt')
    ©¸ <function layer_pruning at 0x000001F6F9A0B790>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 88, in layer_pruning
    torch.save(model_, '../model_data/layer_pruning.pt')
    ©¦     ©¦    ©¸ {'epoch': -1, 'best_fitness': array([   0.078179]), 'model': Model(
    ©¦     ©¦        (model): Sequential(
    ©¦     ©¦          (0): Conv(
    ©¦     ©¦            (conv): Conv2...
    ©¦     ©¸ <function save at 0x000001F6B8BB13A0>
    ©¸ <module 'torch' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\__init__.py'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 627, in save
    with _open_zipfile_writer(f) as opened_zipfile:
         ©¦                    ©¸ '../model_data/layer_pruning.pt'
         ©¸ <function _open_zipfile_writer at 0x000001F6B8BA8D30>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 501, in _open_zipfile_writer
    return container(name_or_buffer)
           ©¦         ©¸ '../model_data/layer_pruning.pt'
           ©¸ <class 'torch.serialization._open_zipfile_writer_file'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 472, in __init__
    super().__init__(torch._C.PyTorchFileWriter(self.name))
                     ©¦     ©¦  ©¦                 ©¦    ©¸ '../model_data/layer_pruning.pt'
                     ©¦     ©¦  ©¦                 ©¸ <torch.serialization._open_zipfile_writer_file object at 0x000001F6FC92BB20>
                     ©¦     ©¦  ©¸ <class 'torch.PyTorchFileWriter'>
                     ©¦     ©¸ <module 'torch._C' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\_C.cp39-win_amd64.pyd'>
                     ©¸ <module 'torch' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\__init__.py'>

RuntimeError: Parent directory ../model_data does not exist.
2024-07-29 09:59:06.227 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=1296]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=6912]
8232 parameters will be pruned
-------------

2024-07-29 09:59:06.229 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(20, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=4500]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=800]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=800]
6150 parameters will be pruned
-------------

2024-07-29 09:59:06.230 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(39, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=468]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=3456]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=384]
5124 parameters will be pruned
-------------

2024-07-29 09:59:06.231 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(39, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=468]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 20, 52])>, Index=[25, 26, 29, 31, 33, 34, 35, 38, 42, 45, 47, 48], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[25, 26, 29, 31, 33, 34, 35, 38, 42, 45, 47, 48], NumPruned=768]
1260 parameters will be pruned
-------------

2024-07-29 09:59:06.232 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(40, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=1000]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=28800]
29850 parameters will be pruned
-------------

2024-07-29 09:59:06.234 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(39, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=17901]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=3264]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=3264]
24531 parameters will be pruned
-------------

2024-07-29 09:59:06.235 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(77, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1925]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=14400]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=14400]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1600]
37275 parameters will be pruned
-------------

2024-07-29 09:59:06.237 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(77, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=1925]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 39, 103])>, Index=[40, 44, 45, 50, 53, 55, 57, 61, 63, 65, 66, 70, 71, 77, 79, 80, 81, 83, 84, 91, 96, 97, 99, 101, 102], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(103, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[40, 44, 45, 50, 53, 55, 57, 61, 63, 65, 66, 70, 71, 77, 79, 80, 81, 83, 84, 91, 96, 97, 99, 101, 102], NumPruned=3200]
5175 parameters will be pruned
-------------

2024-07-29 09:59:06.238 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(78, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=3978]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=3264]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=3264]
128112 parameters will be pruned
-------------

2024-07-29 09:59:06.240 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(77, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=70686]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=13056]
97002 parameters will be pruned
-------------

2024-07-29 09:59:06.242 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(154, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=7854]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
217158 parameters will be pruned
-------------

2024-07-29 09:59:06.246 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(154, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=7854]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 77, 205])>, Index=[79, 80, 81, 84, 85, 87, 95, 96, 100, 106, 108, 109, 110, 112, 115, 118, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 138, 144, 148, 150, 151, 152, 153, 155, 157, 159, 163, 166, 168, 171, 173, 176, 179, 181, 182, 189, 192, 199, 200, 202, 204], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(205, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[79, 80, 81, 84, 85, 87, 95, 96, 100, 106, 108, 109, 110, 112, 115, 118, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 138, 144, 148, 150, 151, 152, 153, 155, 157, 159, 163, 166, 168, 171, 173, 176, 179, 181, 182, 189, 192, 199, 200, 202, 204], NumPruned=13056]
21012 parameters will be pruned
-------------

2024-07-29 09:59:06.247 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(154, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=15708]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=470016]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=13056]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=13056]
512040 parameters will be pruned
-------------

2024-07-29 09:59:06.253 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(154, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=282744]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=52224]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=52224]
387600 parameters will be pruned
-------------

2024-07-29 09:59:06.258 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=52224]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=26112]
345168 parameters will be pruned
-------------

2024-07-29 09:59:06.267 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 154, 410])>, Index=[154, 157, 158, 160, 166, 168, 169, 171, 172, 173, 179, 180, 184, 186, 194, 197, 198, 200, 201, 208, 209, 210, 212, 217, 218, 219, 221, 222, 223, 225, 230, 232, 234, 237, 243, 245, 248, 249, 250, 252, 260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 277, 279, 287, 288, 289, 292, 297, 300, 302, 305, 307, 308, 309, 316, 319, 325, 326, 330, 332, 335, 338, 339, 340, 341, 342, 343, 345, 351, 352, 353, 356, 358, 362, 364, 367, 370, 371, 372, 373, 375, 379, 382, 383, 389, 391, 397, 399, 402, 409], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(410, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[154, 157, 158, 160, 166, 168, 169, 171, 172, 173, 179, 180, 184, 186, 194, 197, 198, 200, 201, 208, 209, 210, 212, 217, 218, 219, 221, 222, 223, 225, 230, 232, 234, 237, 243, 245, 248, 249, 250, 252, 260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 277, 279, 287, 288, 289, 292, 297, 300, 302, 305, 307, 308, 309, 316, 319, 325, 326, 330, 332, 335, 338, 339, 340, 341, 342, 343, 345, 351, 352, 353, 356, 358, 362, 364, 367, 370, 371, 372, 373, 375, 379, 382, 383, 389, 391, 397, 399, 402, 409], NumPruned=52224]
83844 parameters will be pruned
-------------

2024-07-29 09:59:06.269 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(308, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=62832]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=52224]
115464 parameters will be pruned
-------------

2024-07-29 09:59:06.275 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254, 258, 263, 265, 266, 268, 273, 274, 275, 279, 285, 287, 288, 289, 291, 292, 293, 294, 298, 300, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 319, 325, 330, 331, 333, 335, 336, 337, 340, 341, 343, 344, 347, 352, 355, 358, 359, 360, 364, 367, 373, 374, 379, 382, 383, 384, 385, 388, 389, 390, 394, 397, 403, 405, 408, 414, 415, 417, 418, 423, 425, 426, 427, 428, 429, 432, 433, 435, 440, 442, 444, 449, 452, 455, 457, 463, 464, 465, 466, 467, 468, 471, 472, 474, 477, 481, 482, 489, 493, 502, 503, 510, 514, 519, 521, 522, 524, 529, 530, 531, 535, 541, 543, 544, 545, 547, 548, 549, 550, 554, 556, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 581, 586, 587, 589, 591, 592, 593, 596, 597, 599, 600, 603, 608, 611, 614, 615, 616, 620, 623, 629, 630, 635, 638, 639, 640, 641, 644, 645, 646, 650, 653, 659, 661, 664, 670, 671, 673, 674, 679, 681, 682, 683, 684, 685, 688, 689, 691, 696, 698, 700, 705, 708, 711, 713, 719, 720, 721, 722, 723, 724, 727, 728, 730, 733, 737, 738, 745, 749, 758, 759, 766, 770, 775, 777, 778, 780, 785, 786, 787, 791, 797, 799, 800, 801, 803, 804, 805, 806, 810, 812, 815, 817, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 837, 842, 843, 845, 847, 848, 849, 852, 853, 855, 856, 859, 864, 867, 870, 871, 872, 876, 879, 885, 886, 891, 894, 895, 896, 897, 900, 901, 902, 906, 909, 915, 917, 920, 926, 927, 929, 930, 935, 937, 938, 939, 940, 941, 944, 945, 947, 952, 954, 956, 961, 964, 967, 969, 975, 976, 977, 978, 979, 980, 983, 984, 986, 989, 993, 994, 1001, 1005, 1014, 1015, 1022], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254, 258, 263, 265, 266, 268, 273, 274, 275, 279, 285, 287, 288, 289, 291, 292, 293, 294, 298, 300, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 319, 325, 330, 331, 333, 335, 336, 337, 340, 341, 343, 344, 347, 352, 355, 358, 359, 360, 364, 367, 373, 374, 379, 382, 383, 384, 385, 388, 389, 390, 394, 397, 403, 405, 408, 414, 415, 417, 418, 423, 425, 426, 427, 428, 429, 432, 433, 435, 440, 442, 444, 449, 452, 455, 457, 463, 464, 465, 466, 467, 468, 471, 472, 474, 477, 481, 482, 489, 493, 502, 503, 510, 514, 519, 521, 522, 524, 529, 530, 531, 535, 541, 543, 544, 545, 547, 548, 549, 550, 554, 556, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 581, 586, 587, 589, 591, 592, 593, 596, 597, 599, 600, 603, 608, 611, 614, 615, 616, 620, 623, 629, 630, 635, 638, 639, 640, 641, 644, 645, 646, 650, 653, 659, 661, 664, 670, 671, 673, 674, 679, 681, 682, 683, 684, 685, 688, 689, 691, 696, 698, 700, 705, 708, 711, 713, 719, 720, 721, 722, 723, 724, 727, 728, 730, 733, 737, 738, 745, 749, 758, 759, 766, 770, 775, 777, 778, 780, 785, 786, 787, 791, 797, 799, 800, 801, 803, 804, 805, 806, 810, 812, 815, 817, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 837, 842, 843, 845, 847, 848, 849, 852, 853, 855, 856, 859, 864, 867, 870, 871, 872, 876, 879, 885, 886, 891, 894, 895, 896, 897, 900, 901, 902, 906, 909, 915, 917, 920, 926, 927, 929, 930, 935, 937, 938, 939, 940, 941, 944, 945, 947, 952, 954, 956, 961, 964, 967, 969, 975, 976, 977, 978, 979, 980, 983, 984, 986, 989, 993, 994, 1001, 1005, 1014, 1015, 1022], NumPruned=208896]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
240516 parameters will be pruned
-------------

2024-07-29 09:59:06.282 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(616, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=125664]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=52224]
178296 parameters will be pruned
-------------

2024-07-29 09:59:06.284 | INFO     | __main__:layer_pruning:76 -   Params: 7022326 => 4578517

2024-07-29 09:59:06.326 | INFO     | __main__:layer_pruning:90 - ¼ôÖ¦Íê³É

2024-07-29 14:35:45.833 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=1296]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=6912]
8232 parameters will be pruned
-------------

2024-07-29 14:35:45.836 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(20, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=4500]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=800]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=800]
6150 parameters will be pruned
-------------

2024-07-29 14:35:45.837 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(39, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=468]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=3456]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=384]
5124 parameters will be pruned
-------------

2024-07-29 14:35:45.839 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(39, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=468]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 20, 52])>, Index=[25, 26, 29, 31, 33, 34, 35, 38, 42, 45, 47, 48], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[25, 26, 29, 31, 33, 34, 35, 38, 42, 45, 47, 48], NumPruned=768]
1260 parameters will be pruned
-------------

2024-07-29 14:35:45.840 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(40, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=1000]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=28800]
29850 parameters will be pruned
-------------

2024-07-29 14:35:45.841 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(39, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=17901]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=3264]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 6, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127], NumPruned=3264]
24531 parameters will be pruned
-------------

2024-07-29 14:35:45.843 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(77, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1925]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=14400]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=14400]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1600]
37275 parameters will be pruned
-------------

2024-07-29 14:35:45.844 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(77, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=1925]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 11, 14, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 39, 103])>, Index=[40, 44, 45, 50, 53, 55, 57, 61, 63, 65, 66, 70, 71, 77, 79, 80, 81, 83, 84, 91, 96, 97, 99, 101, 102], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(103, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[40, 44, 45, 50, 53, 55, 57, 61, 63, 65, 66, 70, 71, 77, 79, 80, 81, 83, 84, 91, 96, 97, 99, 101, 102], NumPruned=3200]
5175 parameters will be pruned
-------------

2024-07-29 14:35:45.845 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(78, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=3978]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 5, 6, 10, 16, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 62, 66, 68, 69, 70, 72, 77, 79, 80, 84, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=3264]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 130, 133, 134, 138, 144, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 190, 194, 196, 197, 198, 200, 205, 207, 208, 212, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=3264]
128112 parameters will be pruned
-------------

2024-07-29 14:35:45.847 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(77, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=70686]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 11, 13, 19, 20, 22, 24, 31, 33, 34, 37, 39, 47, 49, 51, 55, 56, 60, 61, 63, 67, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 118, 120, 121, 122, 127, 129, 131, 133, 134, 138, 143, 144, 151, 157, 158, 159, 161, 162, 163, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 188, 191, 193, 194, 200, 204, 206, 207, 212, 215, 216, 217, 218, 221, 222, 223, 230, 234, 235, 238, 240, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=13056]
97002 parameters will be pruned
-------------

2024-07-29 14:35:45.849 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(154, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=7854]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=58752]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 15, 17, 20, 21, 24, 26, 29, 33, 35, 36, 38, 41, 42, 43, 52, 53, 54, 56, 60, 61, 64, 66, 69, 70, 71, 74, 78, 80, 89, 90, 91, 94, 96, 97, 102, 105, 109, 111, 116, 117, 118, 120, 123, 125], NumPruned=6528]
217158 parameters will be pruned
-------------

2024-07-29 14:35:45.853 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(154, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=7854]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 4, 7, 8, 10, 18, 19, 23, 29, 31, 32, 33, 35, 38, 41, 47, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 67, 71, 73, 74, 75, 76, 78, 80, 82, 86, 89, 91, 94, 96, 99, 102, 104, 105, 112, 115, 122, 123, 125, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 77, 205])>, Index=[79, 80, 81, 84, 85, 87, 95, 96, 100, 106, 108, 109, 110, 112, 115, 118, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 138, 144, 148, 150, 151, 152, 153, 155, 157, 159, 163, 166, 168, 171, 173, 176, 179, 181, 182, 189, 192, 199, 200, 202, 204], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(205, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[79, 80, 81, 84, 85, 87, 95, 96, 100, 106, 108, 109, 110, 112, 115, 118, 124, 125, 126, 129, 130, 131, 132, 133, 135, 137, 138, 144, 148, 150, 151, 152, 153, 155, 157, 159, 163, 166, 168, 171, 173, 176, 179, 181, 182, 189, 192, 199, 200, 202, 204], NumPruned=13056]
21012 parameters will be pruned
-------------

2024-07-29 14:35:45.854 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(154, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=15708]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 31, 36, 38, 39, 45, 47, 50, 53, 55, 59, 64, 67, 70, 72, 73, 75, 76, 77, 79, 80, 88, 89, 92, 94, 99, 102, 104, 107, 114, 120, 122, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 151, 157, 158, 162, 163, 164, 165, 166, 172, 174, 176, 177, 179, 181, 183, 184, 188, 193, 195, 196, 197, 198, 200, 209, 211, 212, 213, 215, 219, 225, 227, 228, 229, 232, 238, 244, 246, 250, 251, 252], NumPruned=470016]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=13056]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 287, 292, 294, 295, 301, 303, 306, 309, 311, 315, 320, 323, 326, 328, 329, 331, 332, 333, 335, 336, 344, 345, 348, 350, 355, 358, 360, 363, 370, 376, 378, 379, 380, 383, 384, 385, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 401, 402, 407, 413, 414, 418, 419, 420, 421, 422, 428, 430, 432, 433, 435, 437, 439, 440, 444, 449, 451, 452, 453, 454, 456, 465, 467, 468, 469, 471, 475, 481, 483, 484, 485, 488, 494, 500, 502, 506, 507, 508], NumPruned=13056]
512040 parameters will be pruned
-------------

2024-07-29 14:35:45.861 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(154, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=282744]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=52224]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 53, 54, 60, 62, 64, 65, 67, 68, 71, 75, 77, 78, 79, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 115, 118, 119, 120, 121, 125, 126, 134, 136, 138, 139, 142, 144, 146, 147, 148, 149, 150, 153, 154, 156, 158, 159, 160, 161, 163, 165, 166, 167, 169, 173, 176, 177, 179, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 227, 230, 232, 238, 240, 242, 245, 247, 255, 257, 258, 262, 265, 272, 274, 276, 279, 281, 282, 283, 285, 286, 294, 296, 297, 298, 299, 301, 303, 304, 305, 308, 309, 311, 314, 317, 319, 320, 321, 325, 328, 330, 332, 334, 338, 339, 341, 342, 345, 347, 349, 350, 351, 353, 354, 356, 360, 361, 364, 376, 377, 380, 382, 385, 388, 389, 390, 393, 395, 396, 398, 406, 408, 409, 410, 414, 420, 421, 425, 427, 428, 430, 431, 432, 442, 444, 445, 447, 450, 456, 460, 461, 467, 469, 474, 476, 483, 485, 489, 491, 492, 494, 496, 501, 503, 504, 508], NumPruned=52224]
387600 parameters will be pruned
-------------

2024-07-29 14:35:45.867 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=52224]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 17, 25, 26, 27, 31, 35, 36, 39, 41, 45, 49, 50, 51, 53, 54, 58, 60, 62, 67, 71, 77, 79, 88, 89, 92, 93, 94, 100, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 131, 136, 137, 138, 139, 140, 142, 145, 156, 159, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 185, 193, 194, 197, 200, 201, 202, 203, 207, 209, 212, 215, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 246, 249, 250, 251, 253, 255], NumPruned=26112]
345168 parameters will be pruned
-------------

2024-07-29 14:35:45.874 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 4, 6, 12, 14, 15, 17, 18, 19, 25, 26, 30, 32, 40, 43, 44, 46, 47, 54, 55, 56, 58, 63, 64, 65, 67, 68, 69, 71, 76, 78, 80, 83, 89, 91, 94, 95, 96, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 133, 134, 135, 138, 143, 146, 148, 151, 153, 154, 155, 162, 165, 171, 172, 176, 178, 181, 184, 185, 186, 187, 188, 189, 191, 197, 198, 199, 202, 204, 208, 210, 213, 216, 217, 218, 219, 221, 225, 228, 229, 235, 237, 243, 245, 248, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 154, 410])>, Index=[154, 157, 158, 160, 166, 168, 169, 171, 172, 173, 179, 180, 184, 186, 194, 197, 198, 200, 201, 208, 209, 210, 212, 217, 218, 219, 221, 222, 223, 225, 230, 232, 234, 237, 243, 245, 248, 249, 250, 252, 260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 277, 279, 287, 288, 289, 292, 297, 300, 302, 305, 307, 308, 309, 316, 319, 325, 326, 330, 332, 335, 338, 339, 340, 341, 342, 343, 345, 351, 352, 353, 356, 358, 362, 364, 367, 370, 371, 372, 373, 375, 379, 382, 383, 389, 391, 397, 399, 402, 409], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(410, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[154, 157, 158, 160, 166, 168, 169, 171, 172, 173, 179, 180, 184, 186, 194, 197, 198, 200, 201, 208, 209, 210, 212, 217, 218, 219, 221, 222, 223, 225, 230, 232, 234, 237, 243, 245, 248, 249, 250, 252, 260, 261, 262, 263, 265, 266, 269, 271, 272, 273, 274, 275, 276, 277, 279, 287, 288, 289, 292, 297, 300, 302, 305, 307, 308, 309, 316, 319, 325, 326, 330, 332, 335, 338, 339, 340, 341, 342, 343, 345, 351, 352, 353, 356, 358, 362, 364, 367, 370, 371, 372, 373, 375, 379, 382, 383, 389, 391, 397, 399, 402, 409], NumPruned=52224]
83844 parameters will be pruned
-------------

2024-07-29 14:35:45.875 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(308, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=62832]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 14, 18, 23, 25, 30, 33, 41, 43, 47, 48, 52, 54, 61, 62, 67, 72, 74, 76, 80, 88, 91, 95, 96, 98, 99, 100, 103, 104, 114, 121, 123, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 149, 150, 151, 153, 155, 158, 159, 160, 164, 165, 167, 168, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 209, 211, 216, 217, 218, 220, 222, 225, 226, 227, 228, 229, 232, 233, 239, 240, 241, 242, 246, 247, 250, 252, 256, 259, 265, 267, 268, 270, 273, 275, 276, 277, 281, 283, 285, 286, 287, 289, 291, 292, 297, 302, 303, 306, 307, 308, 310, 311, 314, 316, 317, 318, 319, 323, 325, 326, 330, 334, 339, 341, 343, 345, 348, 350, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 379, 381, 383, 384, 385, 387, 394, 395, 406, 409, 413, 417, 419, 421, 422, 423, 424, 425, 426, 437, 438, 439, 441, 442, 445, 451, 452, 459, 461, 462, 463, 464, 469, 477, 478, 482, 484, 485, 490, 492, 495, 497, 504, 511], NumPruned=52224]
115464 parameters will be pruned
-------------

2024-07-29 14:35:45.878 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(308, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=31416]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254, 258, 263, 265, 266, 268, 273, 274, 275, 279, 285, 287, 288, 289, 291, 292, 293, 294, 298, 300, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 319, 325, 330, 331, 333, 335, 336, 337, 340, 341, 343, 344, 347, 352, 355, 358, 359, 360, 364, 367, 373, 374, 379, 382, 383, 384, 385, 388, 389, 390, 394, 397, 403, 405, 408, 414, 415, 417, 418, 423, 425, 426, 427, 428, 429, 432, 433, 435, 440, 442, 444, 449, 452, 455, 457, 463, 464, 465, 466, 467, 468, 471, 472, 474, 477, 481, 482, 489, 493, 502, 503, 510, 514, 519, 521, 522, 524, 529, 530, 531, 535, 541, 543, 544, 545, 547, 548, 549, 550, 554, 556, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 581, 586, 587, 589, 591, 592, 593, 596, 597, 599, 600, 603, 608, 611, 614, 615, 616, 620, 623, 629, 630, 635, 638, 639, 640, 641, 644, 645, 646, 650, 653, 659, 661, 664, 670, 671, 673, 674, 679, 681, 682, 683, 684, 685, 688, 689, 691, 696, 698, 700, 705, 708, 711, 713, 719, 720, 721, 722, 723, 724, 727, 728, 730, 733, 737, 738, 745, 749, 758, 759, 766, 770, 775, 777, 778, 780, 785, 786, 787, 791, 797, 799, 800, 801, 803, 804, 805, 806, 810, 812, 815, 817, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 837, 842, 843, 845, 847, 848, 849, 852, 853, 855, 856, 859, 864, 867, 870, 871, 872, 876, 879, 885, 886, 891, 894, 895, 896, 897, 900, 901, 902, 906, 909, 915, 917, 920, 926, 927, 929, 930, 935, 937, 938, 939, 940, 941, 944, 945, 947, 952, 954, 956, 961, 964, 967, 969, 975, 976, 977, 978, 979, 980, 983, 984, 986, 989, 993, 994, 1001, 1005, 1014, 1015, 1022], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254, 258, 263, 265, 266, 268, 273, 274, 275, 279, 285, 287, 288, 289, 291, 292, 293, 294, 298, 300, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 319, 325, 330, 331, 333, 335, 336, 337, 340, 341, 343, 344, 347, 352, 355, 358, 359, 360, 364, 367, 373, 374, 379, 382, 383, 384, 385, 388, 389, 390, 394, 397, 403, 405, 408, 414, 415, 417, 418, 423, 425, 426, 427, 428, 429, 432, 433, 435, 440, 442, 444, 449, 452, 455, 457, 463, 464, 465, 466, 467, 468, 471, 472, 474, 477, 481, 482, 489, 493, 502, 503, 510, 514, 519, 521, 522, 524, 529, 530, 531, 535, 541, 543, 544, 545, 547, 548, 549, 550, 554, 556, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 581, 586, 587, 589, 591, 592, 593, 596, 597, 599, 600, 603, 608, 611, 614, 615, 616, 620, 623, 629, 630, 635, 638, 639, 640, 641, 644, 645, 646, 650, 653, 659, 661, 664, 670, 671, 673, 674, 679, 681, 682, 683, 684, 685, 688, 689, 691, 696, 698, 700, 705, 708, 711, 713, 719, 720, 721, 722, 723, 724, 727, 728, 730, 733, 737, 738, 745, 749, 758, 759, 766, 770, 775, 777, 778, 780, 785, 786, 787, 791, 797, 799, 800, 801, 803, 804, 805, 806, 810, 812, 815, 817, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 837, 842, 843, 845, 847, 848, 849, 852, 853, 855, 856, 859, 864, 867, 870, 871, 872, 876, 879, 885, 886, 891, 894, 895, 896, 897, 900, 901, 902, 906, 909, 915, 917, 920, 926, 927, 929, 930, 935, 937, 938, 939, 940, 941, 944, 945, 947, 952, 954, 956, 961, 964, 967, 969, 975, 976, 977, 978, 979, 980, 983, 984, 986, 989, 993, 994, 1001, 1005, 1014, 1015, 1022], NumPruned=208896]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 10, 12, 17, 18, 19, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 74, 75, 77, 79, 80, 81, 84, 85, 87, 88, 91, 96, 99, 102, 103, 104, 108, 111, 117, 118, 123, 126, 127, 128, 129, 132, 133, 134, 138, 141, 147, 149, 152, 158, 159, 161, 162, 167, 169, 170, 171, 172, 173, 176, 177, 179, 184, 186, 188, 193, 196, 199, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 221, 225, 226, 233, 237, 246, 247, 254], NumPruned=0]
240516 parameters will be pruned
-------------

2024-07-29 14:35:45.880 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(616, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=125664]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 18, 19, 20, 24, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 63, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 91, 92, 97, 105, 106, 108, 109, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 158, 159, 160, 163, 168, 170, 171, 173, 175, 184, 187, 188, 189, 195, 196, 203, 205, 210, 215, 216, 217, 218, 219, 223, 225, 226, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 263, 264, 265, 266, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 300, 302, 304, 312, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 334, 344, 345, 349, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 377, 378, 381, 383, 384, 387, 389, 394, 395, 398, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 441, 442, 443, 446, 449, 451, 458, 464, 467, 468, 469, 470, 476, 478, 485, 487, 488, 489, 494, 495, 496, 497, 498, 508, 509], NumPruned=52224]
178296 parameters will be pruned
-------------

2024-07-29 14:35:45.881 | INFO     | __main__:layer_pruning:76 -   Params: 7022326 => 4578517

2024-07-29 14:35:45.926 | INFO     | __main__:layer_pruning:90 - ¼ôÖ¦Íê³É

2024-07-29 14:46:06.549 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=2700]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=14400]
17150 parameters will be pruned
-------------

2024-07-29 14:46:06.551 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(7, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3213]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1632]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1632]
6579 parameters will be pruned
-------------

2024-07-29 14:46:06.552 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(13, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=325]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=7200]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=800]
10025 parameters will be pruned
-------------

2024-07-29 14:46:06.556 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(13, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=325]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 7, 39])>, Index=[8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(39, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], NumPruned=1600]
1975 parameters will be pruned
-------------

2024-07-29 14:46:06.557 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(14, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=714]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=58752]
59568 parameters will be pruned
-------------

2024-07-29 14:46:06.558 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(13, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=11934]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=6528]
25194 parameters will be pruned
-------------

2024-07-29 14:46:06.560 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(26, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1326]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=29376]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=29376]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3264]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3264]
73440 parameters will be pruned
-------------

2024-07-29 14:46:06.567 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(26, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=1326]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 13, 77])>, Index=[13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(77, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], NumPruned=6528]
7956 parameters will be pruned
-------------

2024-07-29 14:46:06.568 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(26, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=2652]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=6528]
250920 parameters will be pruned
-------------

2024-07-29 14:46:06.571 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(26, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=47736]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=26112]
100368 parameters will be pruned
-------------

2024-07-29 14:46:06.573 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=5304]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
423912 parameters will be pruned
-------------

2024-07-29 14:46:06.576 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=5304]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 154])>, Index=[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(154, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153], NumPruned=26112]
31620 parameters will be pruned
-------------

2024-07-29 14:46:06.577 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(52, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=10608]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=940032]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=26112]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=26112]
1003272 parameters will be pruned
-------------

2024-07-29 14:46:06.583 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(52, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=191412]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=104704]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=104704]
401638 parameters will be pruned
-------------

2024-07-29 14:46:06.591 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=408]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=470016]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=104448]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=52224]
648516 parameters will be pruned
-------------

2024-07-29 14:46:06.598 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 308])>, Index=[52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 193, 194, 195, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 289, 290, 291, 293, 295, 297, 299, 300, 303, 304, 305, 306, 307], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(308, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 193, 194, 195, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 289, 290, 291, 293, 295, 297, 299, 300, 303, 304, 305, 306, 307], NumPruned=104448]
125868 parameters will be pruned
-------------

2024-07-29 14:46:06.600 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(104, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=42536]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=104704]
148058 parameters will be pruned
-------------

2024-07-29 14:46:06.608 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 349, 352, 354, 355, 356, 358, 359, 360, 361, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 503, 505, 506, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 605, 608, 610, 611, 612, 614, 615, 616, 617, 619, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 650, 651, 653, 654, 655, 656, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 710, 711, 712, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 730, 731, 732, 733, 734, 735, 737, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 755, 757, 758, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 856, 859, 861, 864, 866, 867, 868, 870, 871, 872, 873, 875, 876, 878, 879, 880, 882, 883, 884, 885, 886, 887, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 906, 907, 909, 910, 911, 912, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 964, 966, 967, 968, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 986, 987, 988, 989, 990, 991, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1017, 1018, 1020, 1022, 1023], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 349, 352, 354, 355, 356, 358, 359, 360, 361, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 503, 505, 506, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 605, 608, 610, 611, 612, 614, 615, 616, 617, 619, 620, 622, 623, 624, 626, 627, 628, 629, 630, 631, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 650, 651, 653, 654, 655, 656, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 710, 711, 712, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 730, 731, 732, 733, 734, 735, 737, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 755, 757, 758, 759, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 856, 859, 861, 864, 866, 867, 868, 870, 871, 872, 873, 875, 876, 878, 879, 880, 882, 883, 884, 885, 886, 887, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 904, 906, 907, 909, 910, 911, 912, 915, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 964, 966, 967, 968, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 986, 987, 988, 989, 990, 991, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1017, 1018, 1020, 1022, 1023], NumPruned=417792]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 98, 99, 100, 102, 103, 104, 105, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=0]
439212 parameters will be pruned
-------------

2024-07-29 14:46:06.615 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(208, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511], NumPruned=85072]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 508, 509, 510, 511], NumPruned=104704]
190594 parameters will be pruned
-------------

2024-07-29 14:46:06.617 | INFO     | __main__:layer_pruning:76 -   Params: 7022326 => 3056461

2024-07-29 14:46:06.648 | INFO     | __main__:layer_pruning:90 - ¼ôÖ¦Íê³É

2024-07-29 14:58:28.743 | ERROR    | __main__:<module>:93 - An error has been caught in function '<module>', process 'MainProcess' (2880), thread 'MainThread' (13224):
Traceback (most recent call last):

> File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 93, in <module>
    layer_pruning('../runs/train/exp12/weights/best.pt')
    ©¸ <function layer_pruning at 0x000001DBCDF3A790>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 40, in layer_pruning
    model, ckpt = attempt_load(weights, map_location=device)
                  ©¦            ©¦                     ©¸ device(type='cpu')
                  ©¦            ©¸ '../runs/train/exp12/weights/best.pt'
                  ©¸ <function attempt_load at 0x000001DBD6456B80>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 14, in attempt_load
    ckpt = torch.load(weights, map_location=map_location)  # load
           ©¦     ©¦    ©¦                     ©¸ device(type='cpu')
           ©¦     ©¦    ©¸ '../runs/train/exp12/weights/best.pt'
           ©¦     ©¸ <function load at 0x000001DBFF1D2550>
           ©¸ <module 'torch' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\__init__.py'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 1040, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
           ©¦            ©¦            ©¦             ©¦                ©¸ {'encoding': 'utf-8'}
           ©¦            ©¦            ©¦             ©¸ <module 'pickle' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\pickle.py'>
           ©¦            ©¦            ©¸ device(type='cpu')
           ©¦            ©¸ <_io.BufferedReader name='../runs/train/exp12/weights/best.pt'>
           ©¸ <function _legacy_load at 0x000001DBFF1D2700>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 1262, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ©¦             ©¦    ©¦    ©¸ {'encoding': 'utf-8'}
                   ©¦             ©¦    ©¸ <_io.BufferedReader name='../runs/train/exp12/weights/best.pt'>
                   ©¦             ©¸ <built-in function load>
                   ©¸ <module 'pickle' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\pickle.py'>

EOFError: Ran out of input
2024-07-29 15:03:07.602 | ERROR    | __main__:<module>:93 - An error has been caught in function '<module>', process 'MainProcess' (19460), thread 'MainThread' (30224):
Traceback (most recent call last):

> File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 93, in <module>
    layer_pruning('../runs/train/exp12/weights/best.pt')
    ©¸ <function layer_pruning at 0x000002125D5D8820>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 40, in layer_pruning
    model, ckpt = attempt_load(weights, map_location=device)
                  ©¦            ©¦                     ©¸ device(type='cpu')
                  ©¦            ©¸ '../runs/train/exp12/weights/best.pt'
                  ©¸ <function attempt_load at 0x0000021265AB6B80>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 14, in attempt_load
    ckpt = torch.load(weights, map_location=map_location,encoding='latin1')  # load
           ©¦     ©¦    ©¦                     ©¸ device(type='cpu')
           ©¦     ©¦    ©¸ '../runs/train/exp12/weights/best.pt'
           ©¦     ©¸ <function load at 0x000002127E7F5550>
           ©¸ <module 'torch' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\__init__.py'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 1040, in load
    return _legacy_load(opened_file, map_location, pickle_module, **pickle_load_args)
           ©¦            ©¦            ©¦             ©¦                ©¸ {'encoding': 'latin1'}
           ©¦            ©¦            ©¦             ©¸ <module 'pickle' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\pickle.py'>
           ©¦            ©¦            ©¸ device(type='cpu')
           ©¦            ©¸ <_io.BufferedReader name='../runs/train/exp12/weights/best.pt'>
           ©¸ <function _legacy_load at 0x000002127E7F5700>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 1262, in _legacy_load
    magic_number = pickle_module.load(f, **pickle_load_args)
                   ©¦             ©¦    ©¦    ©¸ {'encoding': 'latin1'}
                   ©¦             ©¦    ©¸ <_io.BufferedReader name='../runs/train/exp12/weights/best.pt'>
                   ©¦             ©¸ <built-in function load>
                   ©¸ <module 'pickle' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\pickle.py'>

EOFError: Ran out of input
2024-07-29 15:08:57.648 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=2700]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=14400]
17150 parameters will be pruned
-------------

2024-07-29 15:08:57.649 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(7, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3213]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1632]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1632]
6579 parameters will be pruned
-------------

2024-07-29 15:08:57.651 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(13, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=325]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=7200]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=800]
10025 parameters will be pruned
-------------

2024-07-29 15:08:57.652 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(13, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=325]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 7, 39])>, Index=[8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(39, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], NumPruned=1600]
1975 parameters will be pruned
-------------

2024-07-29 15:08:57.653 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(14, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=714]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=58752]
59568 parameters will be pruned
-------------

2024-07-29 15:08:57.654 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(13, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=11934]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=6528]
25194 parameters will be pruned
-------------

2024-07-29 15:08:57.655 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(26, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1326]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=29376]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=29376]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3264]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3264]
73440 parameters will be pruned
-------------

2024-07-29 15:08:57.657 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(26, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=1326]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 13, 77])>, Index=[13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(77, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], NumPruned=6528]
7956 parameters will be pruned
-------------

2024-07-29 15:08:57.659 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(26, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=2652]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 142, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=6528]
250920 parameters will be pruned
-------------

2024-07-29 15:08:57.664 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(26, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 80, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=47736]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 80, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 80, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 80, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 80, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=26112]
100368 parameters will be pruned
-------------

2024-07-29 15:08:57.666 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=5304]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 123, 125, 126, 127], NumPruned=13056]
423912 parameters will be pruned
-------------

2024-07-29 15:08:57.669 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=5304]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 154])>, Index=[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(154, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153], NumPruned=26112]
31620 parameters will be pruned
-------------

2024-07-29 15:08:57.671 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(52, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=10608]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=940032]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=26112]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=26112]
1003272 parameters will be pruned
-------------

2024-07-29 15:08:57.678 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(52, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=191412]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=104704]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 314, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=104704]
401638 parameters will be pruned
-------------

2024-07-29 15:08:57.683 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=408]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=470016]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=104448]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 66, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 150, 151, 154, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=52224]
648516 parameters will be pruned
-------------

2024-07-29 15:08:57.692 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 308])>, Index=[52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 299, 300, 303, 304, 305, 306, 307], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(308, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 196, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 299, 300, 303, 304, 305, 306, 307], NumPruned=104448]
125868 parameters will be pruned
-------------

2024-07-29 15:08:57.699 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(104, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 381, 383, 384, 385, 386, 387, 388, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=42536]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 381, 383, 384, 385, 386, 387, 388, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 381, 383, 384, 385, 386, 387, 388, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 174, 175, 176, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 379, 380, 381, 383, 384, 385, 386, 387, 388, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 474, 476, 477, 478, 480, 481, 482, 484, 485, 486, 488, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=104704]
148058 parameters will be pruned
-------------

2024-07-29 15:08:57.701 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 349, 350, 352, 354, 355, 356, 358, 359, 360, 361, 362, 364, 366, 367, 368, 370, 371, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 454, 455, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 499, 501, 502, 503, 505, 506, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 605, 606, 608, 610, 611, 612, 614, 615, 616, 617, 618, 620, 622, 623, 624, 626, 627, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 653, 655, 656, 659, 660, 661, 662, 663, 664, 666, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 700, 702, 703, 704, 705, 706, 708, 710, 711, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 741, 742, 743, 745, 746, 747, 748, 749, 751, 752, 755, 757, 758, 759, 761, 762, 764, 766, 767, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 856, 859, 861, 862, 864, 866, 867, 868, 870, 871, 872, 873, 874, 876, 878, 879, 880, 882, 883, 885, 886, 887, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 911, 912, 915, 916, 917, 918, 919, 920, 922, 924, 925, 926, 927, 928, 929, 930, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 950, 951, 952, 953, 954, 956, 958, 959, 960, 961, 962, 964, 966, 967, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 995, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1011, 1013, 1014, 1015, 1017, 1018, 1020, 1022, 1023], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 252, 254, 255, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 349, 350, 352, 354, 355, 356, 358, 359, 360, 361, 362, 364, 366, 367, 368, 370, 371, 373, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 454, 455, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 483, 485, 486, 487, 489, 490, 491, 492, 493, 495, 496, 499, 501, 502, 503, 505, 506, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 605, 606, 608, 610, 611, 612, 614, 615, 616, 617, 618, 620, 622, 623, 624, 626, 627, 629, 630, 631, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 653, 655, 656, 659, 660, 661, 662, 663, 664, 666, 668, 669, 670, 671, 672, 673, 674, 675, 677, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 700, 702, 703, 704, 705, 706, 708, 710, 711, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 739, 741, 742, 743, 745, 746, 747, 748, 749, 751, 752, 755, 757, 758, 759, 761, 762, 764, 766, 767, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 856, 859, 861, 862, 864, 866, 867, 868, 870, 871, 872, 873, 874, 876, 878, 879, 880, 882, 883, 885, 886, 887, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 911, 912, 915, 916, 917, 918, 919, 920, 922, 924, 925, 926, 927, 928, 929, 930, 931, 933, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 950, 951, 952, 953, 954, 956, 958, 959, 960, 961, 962, 964, 966, 967, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 995, 997, 998, 999, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1011, 1013, 1014, 1015, 1017, 1018, 1020, 1022, 1023], NumPruned=417792]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 198, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 249, 250, 252, 254, 255], NumPruned=0]
439212 parameters will be pruned
-------------

2024-07-29 15:08:57.708 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(208, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=85072]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 145, 146, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=104704]
190594 parameters will be pruned
-------------

2024-07-29 15:08:57.710 | INFO     | __main__:layer_pruning:76 -   Params: 7022326 => 3056461

2024-07-29 15:08:57.747 | INFO     | __main__:layer_pruning:90 - ¼ôÖ¦Íê³É

2024-07-29 15:21:21.590 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=58752]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=6528]
72012 parameters will be pruned
-------------

2024-07-29 15:21:21.592 | INFO     | __main__:layer_pruning:76 -   Params: 7022326 => 6950314

2024-07-29 15:21:21.635 | INFO     | __main__:layer_pruning:90 - ¼ôÖ¦Íê³É

2024-07-31 09:59:33.431 | ERROR    | __main__:<module>:93 - An error has been caught in function '<module>', process 'MainProcess' (25732), thread 'MainThread' (3320):
Traceback (most recent call last):

> File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 93, in <module>
    layer_pruning('../runs/train/exp13/weights/best.pt')
    ©¸ <function layer_pruning at 0x0000018951CEDDC0>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 40, in layer_pruning
    model, ckpt = attempt_load(weights, map_location=device)
                  ©¦            ©¦                     ©¸ device(type='cpu')
                  ©¦            ©¸ '../runs/train/exp13/weights/best.pt'
                  ©¸ <function attempt_load at 0x000001895A20B280>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 14, in attempt_load
    ckpt = torch.load(weights, map_location=map_location,encoding='latin1')  # load
           ©¦     ©¦    ©¦                     ©¸ device(type='cpu')
           ©¦     ©¦    ©¸ '../runs/train/exp13/weights/best.pt'
           ©¦     ©¸ <function load at 0x000001897F07DEE0>
           ©¸ <module 'torch' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\__init__.py'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 997, in load
    with _open_file_like(f, 'rb') as opened_file:
         ©¦               ©¸ '../runs/train/exp13/weights/best.pt'
         ©¸ <function _open_file_like at 0x000001897F07D280>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 444, in _open_file_like
    return _open_file(name_or_buffer, mode)
           ©¦          ©¦               ©¸ 'rb'
           ©¦          ©¸ '../runs/train/exp13/weights/best.pt'
           ©¸ <class 'torch.serialization._open_file'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 425, in __init__
    super().__init__(open(name, mode))
                          ©¦     ©¸ 'rb'
                          ©¸ '../runs/train/exp13/weights/best.pt'

FileNotFoundError: [Errno 2] No such file or directory: '../runs/train/exp13/weights/best.pt'
2024-07-31 10:00:17.824 | INFO     | __main__:layer_pruning:70 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=58752]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=6528]
72012 parameters will be pruned
-------------

2024-07-31 10:00:17.825 | INFO     | __main__:layer_pruning:76 -   Params: 7022326 => 6950314

2024-07-31 10:00:17.866 | INFO     | __main__:layer_pruning:90 - ¼ôÖ¦Íê³É

2024-07-31 10:27:03.399 | ERROR    | __main__:<module>:94 - An error has been caught in function '<module>', process 'MainProcess' (26708), thread 'MainThread' (9392):
Traceback (most recent call last):

> File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 94, in <module>
    layer_pruning('../runs/train/exp3/weights/best.pt')
    ©¸ <function layer_pruning at 0x000001ED5F81DDC0>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 40, in layer_pruning
    model, ckpt = attempt_load(weights, map_location=device)
                  ©¦            ©¦                     ©¸ device(type='cpu')
                  ©¦            ©¸ '../runs/train/exp3/weights/best.pt'
                  ©¸ <function attempt_load at 0x000001ED67D2B280>

  File "D:\Knowledge_distillation_Pruning_Yolov5-master\tools\prunmodel.py", line 14, in attempt_load
    ckpt = torch.load(weights, map_location=map_location,encoding='latin1')  # load
           ©¦     ©¦    ©¦                     ©¸ device(type='cpu')
           ©¦     ©¦    ©¸ '../runs/train/exp3/weights/best.pt'
           ©¦     ©¸ <function load at 0x000001ED7EAAEEE0>
           ©¸ <module 'torch' from 'C:\\Users\\91943\\.conda\\envs\\pytorch\\lib\\site-packages\\torch\\__init__.py'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 997, in load
    with _open_file_like(f, 'rb') as opened_file:
         ©¦               ©¸ '../runs/train/exp3/weights/best.pt'
         ©¸ <function _open_file_like at 0x000001ED7EAAE280>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 444, in _open_file_like
    return _open_file(name_or_buffer, mode)
           ©¦          ©¦               ©¸ 'rb'
           ©¦          ©¸ '../runs/train/exp3/weights/best.pt'
           ©¸ <class 'torch.serialization._open_file'>

  File "C:\Users\91943\.conda\envs\pytorch\lib\site-packages\torch\serialization.py", line 425, in __init__
    super().__init__(open(name, mode))
                          ©¦     ©¸ 'rb'
                          ©¸ '../runs/train/exp3/weights/best.pt'

FileNotFoundError: [Errno 2] No such file or directory: '../runs/train/exp3/weights/best.pt'
2024-07-31 10:27:19.676 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=2700]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=14400]
17150 parameters will be pruned
-------------

2024-07-31 10:27:19.678 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(7, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3213]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1632]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1632]
6579 parameters will be pruned
-------------

2024-07-31 10:27:19.679 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(13, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=325]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=7200]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=800]
10025 parameters will be pruned
-------------

2024-07-31 10:27:19.683 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(13, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=325]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 7, 39])>, Index=[8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(39, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], NumPruned=1600]
1975 parameters will be pruned
-------------

2024-07-31 10:27:19.684 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(14, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=714]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=58752]
59568 parameters will be pruned
-------------

2024-07-31 10:27:19.685 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(13, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=11934]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=6528]
25194 parameters will be pruned
-------------

2024-07-31 10:27:19.687 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(26, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1326]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=29376]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=29376]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3264]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3264]
73440 parameters will be pruned
-------------

2024-07-31 10:27:19.694 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(26, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=1326]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 13, 77])>, Index=[13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(77, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], NumPruned=6528]
7956 parameters will be pruned
-------------

2024-07-31 10:27:19.696 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(26, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=2652]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=6528]
250920 parameters will be pruned
-------------

2024-07-31 10:27:19.702 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(26, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=47736]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=26112]
100368 parameters will be pruned
-------------

2024-07-31 10:27:19.704 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=5304]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
423912 parameters will be pruned
-------------

2024-07-31 10:27:19.713 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=5304]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 154])>, Index=[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(154, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153], NumPruned=26112]
31620 parameters will be pruned
-------------

2024-07-31 10:27:19.714 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(52, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=10608]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=940032]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=26112]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=26112]
1003272 parameters will be pruned
-------------

2024-07-31 10:27:19.719 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(52, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=191412]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=104704]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=104704]
401638 parameters will be pruned
-------------

2024-07-31 10:27:19.727 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=408]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=470016]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=104448]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=52224]
648516 parameters will be pruned
-------------

2024-07-31 10:27:19.735 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 308])>, Index=[52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 289, 290, 291, 293, 295, 297, 299, 300, 303, 304, 305, 306, 307], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(308, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 289, 290, 291, 293, 295, 297, 299, 300, 303, 304, 305, 306, 307], NumPruned=104448]
125868 parameters will be pruned
-------------

2024-07-31 10:27:19.742 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(104, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=42536]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=104704]
148058 parameters will be pruned
-------------

2024-07-31 10:27:19.745 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 354, 355, 356, 358, 359, 360, 361, 364, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 503, 505, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 604, 605, 607, 608, 610, 611, 612, 614, 615, 616, 617, 620, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 653, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 710, 711, 712, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 755, 757, 758, 759, 761, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 856, 859, 860, 861, 863, 864, 866, 867, 868, 870, 871, 872, 873, 876, 878, 879, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 964, 966, 967, 968, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1017, 1020, 1022, 1023], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 354, 355, 356, 358, 359, 360, 361, 364, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 503, 505, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 604, 605, 607, 608, 610, 611, 612, 614, 615, 616, 617, 620, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 653, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 710, 711, 712, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 755, 757, 758, 759, 761, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 856, 859, 860, 861, 863, 864, 866, 867, 868, 870, 871, 872, 873, 876, 878, 879, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 964, 966, 967, 968, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1017, 1020, 1022, 1023], NumPruned=417792]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=0]
439212 parameters will be pruned
-------------

2024-07-31 10:27:19.751 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(208, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=85072]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=104704]
190594 parameters will be pruned
-------------

2024-07-31 10:27:19.753 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 3056461

2024-07-31 10:27:19.785 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-07-31 10:34:09.584 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=648]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=3456]
4116 parameters will be pruned
-------------

2024-07-31 10:34:09.585 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(26, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=2808]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
3600 parameters will be pruned
-------------

2024-07-31 10:34:09.587 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=1728]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=192]
2640 parameters will be pruned
-------------

2024-07-31 10:34:09.588 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 14, 25], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 58])>, Index=[31, 32, 35, 37, 40, 51], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(58, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[31, 32, 35, 37, 40, 51], NumPruned=384]
708 parameters will be pruned
-------------

2024-07-31 10:34:09.589 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=624]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=13824]
14472 parameters will be pruned
-------------

2024-07-31 10:34:09.590 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(52, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=11700]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
14950 parameters will be pruned
-------------

2024-07-31 10:34:09.592 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
18204 parameters will be pruned
-------------

2024-07-31 10:34:09.595 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 116])>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(116, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=1536]
2796 parameters will be pruned
-------------

2024-07-31 10:34:09.596 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(104, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=2600]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=57600]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=1600]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=1600]
63450 parameters will be pruned
-------------

2024-07-31 10:34:09.598 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(103, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=47277]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
60435 parameters will be pruned
-------------

2024-07-31 10:34:09.602 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=6400]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
107725 parameters will be pruned
-------------

2024-07-31 10:34:09.610 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 103, 231])>, Index=[110, 111, 113, 134, 135, 136, 138, 144, 151, 152, 155, 157, 158, 163, 164, 176, 177, 181, 189, 197, 199, 205, 215, 225, 228], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(231, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[110, 111, 113, 134, 135, 136, 138, 144, 151, 152, 155, 157, 158, 163, 164, 176, 177, 181, 189, 197, 199, 205, 215, 225, 228], NumPruned=6400]
11575 parameters will be pruned
-------------

2024-07-31 10:34:09.615 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(206, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=10506]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
258672 parameters will be pruned
-------------

2024-07-31 10:34:09.619 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(205, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=188190]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
240618 parameters will be pruned
-------------

2024-07-31 10:34:09.622 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=13056]
177786 parameters will be pruned
-------------

2024-07-31 10:34:09.626 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 205, 461])>, Index=[205, 206, 208, 211, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 384, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(461, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[205, 206, 208, 211, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 384, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=26112]
47124 parameters will be pruned
-------------

2024-07-31 10:34:09.628 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(410, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=41820]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=26112]
68136 parameters will be pruned
-------------

2024-07-31 10:34:09.634 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[10, 522, 12, 524, 18, 530, 1022, 535, 23, 31, 543, 32, 33, 544, 35, 36, 37, 545, 547, 548, 549, 42, 554, 44, 556, 50, 562, 57, 58, 59, 569, 61, 570, 63, 571, 573, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 247, 759, 254, 766, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 314, 315, 825, 317, 826, 319, 827, 829, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 1015, 503, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 522, 12, 524, 18, 530, 1022, 535, 23, 31, 543, 32, 33, 544, 35, 36, 37, 545, 547, 548, 549, 42, 554, 44, 556, 50, 562, 57, 58, 59, 569, 61, 570, 63, 571, 573, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 247, 759, 254, 766, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 314, 315, 825, 317, 826, 319, 827, 829, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 1015, 503, 510], NumPruned=104448]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
125460 parameters will be pruned
-------------

2024-07-31 10:34:09.641 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(820, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=83640]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=26112]
109956 parameters will be pruned
-------------

2024-07-31 10:34:09.643 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 5689903

2024-07-31 10:34:09.685 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-07-31 10:40:48.191 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.193 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.194 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.194 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.195 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.195 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.197 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.198 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.198 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.199 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.200 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.200 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.201 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.202 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.204 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.205 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.206 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.206 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.207 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[], NumPruned=0]
0 parameters will be pruned
-------------

2024-07-31 10:40:48.208 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 7022326

2024-07-31 10:40:48.244 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-07-31 10:46:22.725 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 25, 28], NumPruned=324]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 25, 28], NumPruned=6]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 25, 28], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 25, 28], NumPruned=1728]
2058 parameters will be pruned
-------------

2024-07-31 10:46:22.726 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(29, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[13, 15, 21, 30, 55, 60], NumPruned=1566]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[13, 15, 21, 30, 55, 60], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[13, 15, 21, 30, 55, 60], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 15, 21, 30, 55, 60], NumPruned=192]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 15, 21, 30, 55, 60], NumPruned=192]
1962 parameters will be pruned
-------------

2024-07-31 10:46:22.726 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(58, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 30, 31], NumPruned=174]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[13, 30, 31], NumPruned=6]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[13, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[13, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[13, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[13, 30, 31], NumPruned=6]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[13, 30, 31], NumPruned=864]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[13, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 30, 31], NumPruned=192]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 30, 31], NumPruned=96]
1338 parameters will be pruned
-------------

2024-07-31 10:46:22.728 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(58, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[6, 14, 25], NumPruned=174]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[6, 14, 25], NumPruned=6]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[6, 14, 25], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 29, 61])>, Index=[35, 43, 54], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(61, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[35, 43, 54], NumPruned=192]
372 parameters will be pruned
-------------

2024-07-31 10:46:22.729 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(58, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 21, 32, 40, 49, 60], NumPruned=348]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 21, 32, 40, 49, 60], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 21, 32, 40, 49, 60], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[5, 21, 32, 40, 49, 60], NumPruned=6912]
7272 parameters will be pruned
-------------

2024-07-31 10:46:22.729 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(58, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 40, 45, 49, 54, 61, 66, 72, 115, 116, 120, 127], NumPruned=6264]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 40, 45, 49, 54, 61, 66, 72, 115, 116, 120, 127], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 40, 45, 49, 54, 61, 66, 72, 115, 116, 120, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 40, 45, 49, 54, 61, 66, 72, 115, 116, 120, 127], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 40, 45, 49, 54, 61, 66, 72, 115, 116, 120, 127], NumPruned=768]
7824 parameters will be pruned
-------------

2024-07-31 10:46:22.730 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(116, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=696]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[12, 18, 22, 48, 50, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[12, 18, 22, 48, 50, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[12, 18, 22, 48, 50, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=12]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=3456]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[12, 18, 22, 48, 50, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[12, 18, 22, 48, 50, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=12]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=3456]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[12, 18, 22, 48, 50, 61], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[12, 18, 22, 48, 50, 61], NumPruned=384]
9180 parameters will be pruned
-------------

2024-07-31 10:46:22.732 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(116, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 24, 26, 31, 58, 63], NumPruned=696]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 24, 26, 31, 58, 63], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 24, 26, 31, 58, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 58, 122])>, Index=[69, 82, 84, 89, 116, 121], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(122, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[69, 82, 84, 89, 116, 121], NumPruned=768]
1476 parameters will be pruned
-------------

2024-07-31 10:46:22.733 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(116, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[16, 21, 47, 66, 68, 70, 85, 88, 93, 102, 123, 124], NumPruned=1392]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[16, 21, 47, 66, 68, 70, 85, 88, 93, 102, 123, 124], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[16, 21, 47, 66, 68, 70, 85, 88, 93, 102, 123, 124], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[16, 21, 47, 66, 68, 70, 85, 88, 93, 102, 123, 124], NumPruned=27648]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[144, 149, 175, 194, 196, 198, 213, 216, 221, 230, 251, 252], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[144, 149, 175, 194, 196, 198, 213, 216, 221, 230, 251, 252], NumPruned=768]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[144, 149, 175, 194, 196, 198, 213, 216, 221, 230, 251, 252], NumPruned=768]
30600 parameters will be pruned
-------------

2024-07-31 10:46:22.734 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(116, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[31, 71, 72, 75, 95, 97, 98, 105, 118, 120, 157, 162, 169, 170, 174, 178, 180, 191, 194, 204, 215, 217, 243, 247, 248], NumPruned=26100]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[31, 71, 72, 75, 95, 97, 98, 105, 118, 120, 157, 162, 169, 170, 174, 178, 180, 191, 194, 204, 215, 217, 243, 247, 248], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[31, 71, 72, 75, 95, 97, 98, 105, 118, 120, 157, 162, 169, 170, 174, 178, 180, 191, 194, 204, 215, 217, 243, 247, 248], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[31, 71, 72, 75, 95, 97, 98, 105, 118, 120, 157, 162, 169, 170, 174, 178, 180, 191, 194, 204, 215, 217, 243, 247, 248], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[31, 71, 72, 75, 95, 97, 98, 105, 118, 120, 157, 162, 169, 170, 174, 178, 180, 191, 194, 204, 215, 217, 243, 247, 248], NumPruned=3200]
32550 parameters will be pruned
-------------

2024-07-31 10:46:22.735 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(231, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=2772]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=13824]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=13824]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=13824]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=3072]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=1536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=1536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 17, 21, 28, 29, 54, 60, 64, 73, 89, 91, 97], NumPruned=1536]
52020 parameters will be pruned
-------------

2024-07-31 10:46:22.738 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(231, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[8, 10, 31, 32, 35, 47, 48, 60, 61, 73, 94, 125], NumPruned=2772]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[8, 10, 31, 32, 35, 47, 48, 60, 61, 73, 94, 125], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[8, 10, 31, 32, 35, 47, 48, 60, 61, 73, 94, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 116, 244])>, Index=[124, 126, 147, 148, 151, 163, 164, 176, 177, 189, 210, 241], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(244, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[124, 126, 147, 148, 151, 163, 164, 176, 177, 189, 210, 241], NumPruned=3072]
5868 parameters will be pruned
-------------

2024-07-31 10:46:22.738 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(232, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[8, 9, 14, 16, 20, 24, 59, 67, 73, 79, 89, 104, 114, 123, 125, 132, 145, 151, 176, 177, 181, 183, 215, 225, 251], NumPruned=5800]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[8, 9, 14, 16, 20, 24, 59, 67, 73, 79, 89, 104, 114, 123, 125, 132, 145, 151, 176, 177, 181, 183, 215, 225, 251], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[8, 9, 14, 16, 20, 24, 59, 67, 73, 79, 89, 104, 114, 123, 125, 132, 145, 151, 176, 177, 181, 183, 215, 225, 251], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[8, 9, 14, 16, 20, 24, 59, 67, 73, 79, 89, 104, 114, 123, 125, 132, 145, 151, 176, 177, 181, 183, 215, 225, 251], NumPruned=115200]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[264, 265, 270, 272, 276, 280, 315, 323, 329, 335, 345, 360, 370, 379, 381, 388, 401, 407, 432, 433, 437, 439, 471, 481, 507], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[264, 265, 270, 272, 276, 280, 315, 323, 329, 335, 345, 360, 370, 379, 381, 388, 401, 407, 432, 433, 437, 439, 471, 481, 507], NumPruned=3200]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[264, 265, 270, 272, 276, 280, 315, 323, 329, 335, 345, 360, 370, 379, 381, 388, 401, 407, 432, 433, 437, 439, 471, 481, 507], NumPruned=3200]
127450 parameters will be pruned
-------------

2024-07-31 10:46:22.742 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(231, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[16, 20, 22, 23, 36, 38, 54, 90, 93, 100, 109, 110, 111, 118, 147, 149, 153, 159, 160, 161, 165, 173, 176, 190, 202, 207, 208, 209, 211, 213, 230, 255, 258, 303, 305, 309, 314, 328, 330, 338, 353, 361, 389, 414, 456, 461, 469, 491, 496, 503, 508], NumPruned=106029]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[16, 20, 22, 23, 36, 38, 54, 90, 93, 100, 109, 110, 111, 118, 147, 149, 153, 159, 160, 161, 165, 173, 176, 190, 202, 207, 208, 209, 211, 213, 230, 255, 258, 303, 305, 309, 314, 328, 330, 338, 353, 361, 389, 414, 456, 461, 469, 491, 496, 503, 508], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[16, 20, 22, 23, 36, 38, 54, 90, 93, 100, 109, 110, 111, 118, 147, 149, 153, 159, 160, 161, 165, 173, 176, 190, 202, 207, 208, 209, 211, 213, 230, 255, 258, 303, 305, 309, 314, 328, 330, 338, 353, 361, 389, 414, 456, 461, 469, 491, 496, 503, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[16, 20, 22, 23, 36, 38, 54, 90, 93, 100, 109, 110, 111, 118, 147, 149, 153, 159, 160, 161, 165, 173, 176, 190, 202, 207, 208, 209, 211, 213, 230, 255, 258, 303, 305, 309, 314, 328, 330, 338, 353, 361, 389, 414, 456, 461, 469, 491, 496, 503, 508], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[16, 20, 22, 23, 36, 38, 54, 90, 93, 100, 109, 110, 111, 118, 147, 149, 153, 159, 160, 161, 165, 173, 176, 190, 202, 207, 208, 209, 211, 213, 230, 255, 258, 303, 305, 309, 314, 328, 330, 338, 353, 361, 389, 414, 456, 461, 469, 491, 496, 503, 508], NumPruned=13056]
132243 parameters will be pruned
-------------

2024-07-31 10:46:22.744 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(461, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=11525]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=57600]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=12800]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 25, 31, 36, 58, 79, 108, 109, 110, 112, 122, 131, 137, 138, 140, 174, 182, 193, 194, 209, 215, 218, 219, 224, 226], NumPruned=6400]
88425 parameters will be pruned
-------------

2024-07-31 10:46:22.751 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(461, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 6, 17, 32, 65, 78, 107, 111, 120, 121, 122, 123, 134, 172, 176, 187, 188, 189, 191, 197, 204, 225, 228, 229, 243], NumPruned=11525]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 6, 17, 32, 65, 78, 107, 111, 120, 121, 122, 123, 134, 172, 176, 187, 188, 189, 191, 197, 204, 225, 228, 229, 243], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 6, 17, 32, 65, 78, 107, 111, 120, 121, 122, 123, 134, 172, 176, 187, 188, 189, 191, 197, 204, 225, 228, 229, 243], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 231, 487])>, Index=[234, 237, 248, 263, 296, 309, 338, 342, 351, 352, 353, 354, 365, 403, 407, 418, 419, 420, 422, 428, 435, 456, 459, 460, 474], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(487, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[234, 237, 248, 263, 296, 309, 338, 342, 351, 352, 353, 354, 365, 403, 407, 418, 419, 420, 422, 428, 435, 456, 459, 460, 474], NumPruned=12800]
24375 parameters will be pruned
-------------

2024-07-31 10:46:22.752 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(462, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 48, 67, 72, 74, 91, 95, 98, 99, 104, 139, 147, 155, 167, 178, 196, 203, 209, 218, 220, 225, 228, 242, 250, 265, 268, 289, 297, 303, 314, 326, 339, 348, 360, 364, 371, 372, 381, 409, 419, 424, 426, 439, 442, 459, 469, 482, 495, 511], NumPruned=23562]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 5, 7, 48, 67, 72, 74, 91, 95, 98, 99, 104, 139, 147, 155, 167, 178, 196, 203, 209, 218, 220, 225, 228, 242, 250, 265, 268, 289, 297, 303, 314, 326, 339, 348, 360, 364, 371, 372, 381, 409, 419, 424, 426, 439, 442, 459, 469, 482, 495, 511], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 5, 7, 48, 67, 72, 74, 91, 95, 98, 99, 104, 139, 147, 155, 167, 178, 196, 203, 209, 218, 220, 225, 228, 242, 250, 265, 268, 289, 297, 303, 314, 326, 339, 348, 360, 364, 371, 372, 381, 409, 419, 424, 426, 439, 442, 459, 469, 482, 495, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 48, 67, 72, 74, 91, 95, 98, 99, 104, 139, 147, 155, 167, 178, 196, 203, 209, 218, 220, 225, 228, 242, 250, 265, 268, 289, 297, 303, 314, 326, 339, 348, 360, 364, 371, 372, 381, 409, 419, 424, 426, 439, 442, 459, 469, 482, 495, 511], NumPruned=13056]
36720 parameters will be pruned
-------------

2024-07-31 10:46:22.754 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(461, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[18, 23, 32, 33, 37, 42, 44, 50, 57, 59, 61, 63, 69, 99, 152, 159, 162, 176, 210, 215, 216, 221, 226, 233, 254], NumPruned=11525]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[18, 23, 32, 33, 37, 42, 44, 50, 57, 59, 61, 63, 69, 99, 152, 159, 162, 176, 210, 215, 216, 221, 226, 233, 254], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[18, 23, 32, 33, 37, 42, 44, 50, 57, 59, 61, 63, 69, 99, 152, 159, 162, 176, 210, 215, 216, 221, 226, 233, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[530, 18, 1022, 535, 23, 32, 33, 544, 545, 37, 549, 42, 554, 44, 556, 50, 562, 57, 569, 59, 571, 61, 573, 63, 575, 69, 581, 99, 611, 664, 152, 159, 671, 162, 674, 176, 688, 210, 722, 215, 216, 727, 728, 221, 733, 226, 738, 233, 745, 254, 766, 274, 786, 279, 791, 288, 289, 800, 801, 293, 805, 298, 810, 300, 812, 306, 818, 313, 825, 315, 827, 317, 829, 319, 831, 325, 837, 355, 867, 408, 920, 415, 927, 418, 930, 432, 944, 466, 978, 471, 472, 983, 984, 477, 989, 482, 994, 489, 1001, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[530, 18, 1022, 535, 23, 32, 33, 544, 545, 37, 549, 42, 554, 44, 556, 50, 562, 57, 569, 59, 571, 61, 573, 63, 575, 69, 581, 99, 611, 664, 152, 159, 671, 162, 674, 176, 688, 210, 722, 215, 216, 727, 728, 221, 733, 226, 738, 233, 745, 254, 766, 274, 786, 279, 791, 288, 289, 800, 801, 293, 805, 298, 810, 300, 812, 306, 818, 313, 825, 315, 827, 317, 829, 319, 831, 325, 837, 355, 867, 408, 920, 415, 927, 418, 930, 432, 944, 466, 978, 471, 472, 983, 984, 477, 989, 482, 994, 489, 1001, 510], NumPruned=51200]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[18, 23, 32, 33, 37, 42, 44, 50, 57, 59, 61, 63, 69, 99, 152, 159, 162, 176, 210, 215, 216, 221, 226, 233, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[18, 23, 32, 33, 37, 42, 44, 50, 57, 59, 61, 63, 69, 99, 152, 159, 162, 176, 210, 215, 216, 221, 226, 233, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[18, 23, 32, 33, 37, 42, 44, 50, 57, 59, 61, 63, 69, 99, 152, 159, 162, 176, 210, 215, 216, 221, 226, 233, 254], NumPruned=0]
62775 parameters will be pruned
-------------

2024-07-31 10:46:22.756 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(924, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 6, 24, 40, 58, 70, 86, 97, 125, 137, 144, 152, 160, 168, 170, 171, 175, 184, 188, 218, 223, 237, 247, 250, 251, 258, 264, 266, 272, 286, 287, 317, 318, 334, 344, 356, 357, 368, 378, 394, 395, 398, 410, 427, 432, 449, 470, 476, 487, 497], NumPruned=47124]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 5, 6, 24, 40, 58, 70, 86, 97, 125, 137, 144, 152, 160, 168, 170, 171, 175, 184, 188, 218, 223, 237, 247, 250, 251, 258, 264, 266, 272, 286, 287, 317, 318, 334, 344, 356, 357, 368, 378, 394, 395, 398, 410, 427, 432, 449, 470, 476, 487, 497], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 5, 6, 24, 40, 58, 70, 86, 97, 125, 137, 144, 152, 160, 168, 170, 171, 175, 184, 188, 218, 223, 237, 247, 250, 251, 258, 264, 266, 272, 286, 287, 317, 318, 334, 344, 356, 357, 368, 378, 394, 395, 398, 410, 427, 432, 449, 470, 476, 487, 497], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 6, 24, 40, 58, 70, 86, 97, 125, 137, 144, 152, 160, 168, 170, 171, 175, 184, 188, 218, 223, 237, 247, 250, 251, 258, 264, 266, 272, 286, 287, 317, 318, 334, 344, 356, 357, 368, 378, 394, 395, 398, 410, 427, 432, 449, 470, 476, 487, 497], NumPruned=13056]
60282 parameters will be pruned
-------------

2024-07-31 10:46:22.758 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 6337536

2024-07-31 10:46:22.801 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-07-31 11:10:26.867 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=2700]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31], NumPruned=14400]
17150 parameters will be pruned
-------------

2024-07-31 11:10:26.868 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(7, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3213]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1632]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 39, 41, 42, 43, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1632]
6579 parameters will be pruned
-------------

2024-07-31 11:10:26.869 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(13, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=325]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=7200]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 30, 31], NumPruned=800]
10025 parameters will be pruned
-------------

2024-07-31 11:10:26.870 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(13, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=325]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 7, 39])>, Index=[8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(39, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[8, 10, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], NumPruned=1600]
1975 parameters will be pruned
-------------

2024-07-31 11:10:26.871 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(14, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=714]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62], NumPruned=58752]
59568 parameters will be pruned
-------------

2024-07-31 11:10:26.872 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(13, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=11934]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126], NumPruned=6528]
25194 parameters will be pruned
-------------

2024-07-31 11:10:26.873 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(26, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=1326]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=29376]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=29376]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3264]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63], NumPruned=3264]
73440 parameters will be pruned
-------------

2024-07-31 11:10:26.874 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(26, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=1326]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 13, 77])>, Index=[13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(77, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 76], NumPruned=6528]
7956 parameters will be pruned
-------------

2024-07-31 11:10:26.875 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(26, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=2652]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 62, 63, 64, 66, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 135, 136, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255], NumPruned=6528]
250920 parameters will be pruned
-------------

2024-07-31 11:10:26.877 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(26, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=47736]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 111, 113, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 147, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 168, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255], NumPruned=26112]
100368 parameters will be pruned
-------------

2024-07-31 11:10:26.880 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=5304]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127], NumPruned=13056]
423912 parameters will be pruned
-------------

2024-07-31 11:10:26.889 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(52, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=5304]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 154])>, Index=[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(154, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 130, 131, 134, 135, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153], NumPruned=26112]
31620 parameters will be pruned
-------------

2024-07-31 11:10:26.891 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(52, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=10608]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 159, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], NumPruned=940032]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=26112]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 343, 344, 345, 346, 347, 348, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 460, 461, 463, 464, 465, 466, 467, 468, 470, 471, 473, 475, 476, 477, 478, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], NumPruned=26112]
1003272 parameters will be pruned
-------------

2024-07-31 11:10:26.896 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(52, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=191412]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=104704]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 9, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 218, 220, 222, 223, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 278, 279, 282, 283, 284, 285, 286, 288, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 376, 377, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 438, 440, 441, 442, 444, 445, 447, 450, 451, 452, 456, 457, 460, 461, 462, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511], NumPruned=104704]
401638 parameters will be pruned
-------------

2024-07-31 11:10:26.902 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=408]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=470016]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=104448]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 152, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 255], NumPruned=52224]
648516 parameters will be pruned
-------------

2024-07-31 11:10:26.904 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 148, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 222, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 308])>, Index=[52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 289, 290, 291, 293, 295, 297, 299, 300, 303, 304, 305, 306, 307], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(308, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 200, 202, 203, 205, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 274, 276, 277, 279, 280, 282, 284, 285, 286, 287, 289, 290, 291, 293, 295, 297, 299, 300, 303, 304, 305, 306, 307], NumPruned=104448]
125868 parameters will be pruned
-------------

2024-07-31 11:10:26.906 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(104, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=42536]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 299, 300, 302, 303, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 329, 330, 331, 332, 334, 336, 339, 341, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 363, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 489, 490, 492, 494, 495, 496, 497, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 511], NumPruned=104704]
148058 parameters will be pruned
-------------

2024-07-31 11:10:26.908 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(103, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=21012]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=408]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 354, 355, 356, 358, 359, 360, 361, 364, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 503, 505, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 604, 605, 607, 608, 610, 611, 612, 614, 615, 616, 617, 620, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 653, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 710, 711, 712, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 755, 757, 758, 759, 761, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 856, 859, 860, 861, 863, 864, 866, 867, 868, 870, 871, 872, 873, 876, 878, 879, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 964, 966, 967, 968, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1017, 1020, 1022, 1023], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 343, 344, 347, 348, 349, 351, 352, 354, 355, 356, 358, 359, 360, 361, 364, 366, 367, 368, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 499, 501, 502, 503, 505, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 552, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 597, 598, 599, 600, 603, 604, 605, 607, 608, 610, 611, 612, 614, 615, 616, 617, 620, 622, 623, 624, 626, 627, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 653, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 710, 711, 712, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 737, 738, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 755, 757, 758, 759, 761, 764, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 808, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 856, 859, 860, 861, 863, 864, 866, 867, 868, 870, 871, 872, 873, 876, 878, 879, 880, 882, 883, 885, 886, 887, 888, 889, 890, 891, 892, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 906, 907, 909, 911, 912, 915, 916, 917, 918, 919, 920, 921, 922, 924, 925, 926, 927, 928, 929, 930, 931, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 947, 949, 950, 951, 952, 953, 954, 956, 957, 958, 960, 961, 962, 964, 966, 967, 968, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 993, 994, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1011, 1013, 1014, 1015, 1017, 1020, 1022, 1023], NumPruned=417792]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 108, 110, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 252, 254, 255], NumPruned=0]
439212 parameters will be pruned
-------------

2024-07-31 11:10:26.915 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(208, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=85072]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=818]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 53, 57, 58, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 175, 176, 178, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 402, 403, 405, 406, 409, 410, 412, 413, 414, 415, 416, 417, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 500, 503, 504, 505, 506, 508, 509, 510, 511], NumPruned=104704]
190594 parameters will be pruned
-------------

2024-07-31 11:10:26.917 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 3056461

2024-07-31 11:10:26.948 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-07-31 11:10:39.783 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 4, 8, 13, 14, 17, 18, 21, 22, 25, 26, 27, 28, 29, 30], NumPruned=1728]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 4, 8, 13, 14, 17, 18, 21, 22, 25, 26, 27, 28, 29, 30], NumPruned=32]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 4, 8, 13, 14, 17, 18, 21, 22, 25, 26, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 4, 8, 13, 14, 17, 18, 21, 22, 25, 26, 27, 28, 29, 30], NumPruned=9216]
10976 parameters will be pruned
-------------

2024-07-31 11:10:39.786 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(16, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 21, 22, 26, 28, 29, 30, 31, 33, 35, 38, 41, 45, 46, 49, 54, 55, 60, 61, 63], NumPruned=4608]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 21, 22, 26, 28, 29, 30, 31, 33, 35, 38, 41, 45, 46, 49, 54, 55, 60, 61, 63], NumPruned=64]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 21, 22, 26, 28, 29, 30, 31, 33, 35, 38, 41, 45, 46, 49, 54, 55, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 21, 22, 26, 28, 29, 30, 31, 33, 35, 38, 41, 45, 46, 49, 54, 55, 60, 61, 63], NumPruned=1024]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 7, 8, 9, 10, 12, 13, 14, 15, 18, 21, 22, 26, 28, 29, 30, 31, 33, 35, 38, 41, 45, 46, 49, 54, 55, 60, 61, 63], NumPruned=1024]
6720 parameters will be pruned
-------------

2024-07-31 11:10:39.787 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=512]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=32]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=32]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=4608]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=1024]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 5, 8, 10, 12, 13, 15, 16, 18, 19, 20, 26, 27, 30, 31], NumPruned=512]
6720 parameters will be pruned
-------------

2024-07-31 11:10:39.789 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 5, 6, 9, 11, 13, 14, 15, 17, 18, 22, 24, 25, 26, 27, 28], NumPruned=512]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 5, 6, 9, 11, 13, 14, 15, 17, 18, 22, 24, 25, 26, 27, 28], NumPruned=32]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 5, 6, 9, 11, 13, 14, 15, 17, 18, 22, 24, 25, 26, 27, 28], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 16, 48])>, Index=[19, 21, 22, 25, 27, 29, 30, 31, 33, 34, 38, 40, 41, 42, 43, 44], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(48, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[19, 21, 22, 25, 27, 29, 30, 31, 33, 34, 38, 40, 41, 42, 43, 44], NumPruned=1024]
1568 parameters will be pruned
-------------

2024-07-31 11:10:39.790 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 21, 29, 31, 32, 34, 36, 40, 43, 44, 46, 49, 50, 53, 54, 56, 58, 60, 61], NumPruned=1024]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 21, 29, 31, 32, 34, 36, 40, 43, 44, 46, 49, 50, 53, 54, 56, 58, 60, 61], NumPruned=64]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 21, 29, 31, 32, 34, 36, 40, 43, 44, 46, 49, 50, 53, 54, 56, 58, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 21, 29, 31, 32, 34, 36, 40, 43, 44, 46, 49, 50, 53, 54, 56, 58, 60, 61], NumPruned=36864]
37952 parameters will be pruned
-------------

2024-07-31 11:10:39.792 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(32, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[3, 7, 11, 13, 14, 15, 17, 20, 21, 22, 23, 31, 33, 36, 37, 38, 39, 40, 43, 45, 46, 49, 51, 54, 56, 57, 58, 61, 65, 66, 68, 71, 72, 73, 74, 75, 76, 79, 83, 84, 85, 87, 88, 89, 91, 93, 95, 97, 98, 99, 102, 109, 110, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127], NumPruned=18432]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 7, 11, 13, 14, 15, 17, 20, 21, 22, 23, 31, 33, 36, 37, 38, 39, 40, 43, 45, 46, 49, 51, 54, 56, 57, 58, 61, 65, 66, 68, 71, 72, 73, 74, 75, 76, 79, 83, 84, 85, 87, 88, 89, 91, 93, 95, 97, 98, 99, 102, 109, 110, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127], NumPruned=128]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 7, 11, 13, 14, 15, 17, 20, 21, 22, 23, 31, 33, 36, 37, 38, 39, 40, 43, 45, 46, 49, 51, 54, 56, 57, 58, 61, 65, 66, 68, 71, 72, 73, 74, 75, 76, 79, 83, 84, 85, 87, 88, 89, 91, 93, 95, 97, 98, 99, 102, 109, 110, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 7, 11, 13, 14, 15, 17, 20, 21, 22, 23, 31, 33, 36, 37, 38, 39, 40, 43, 45, 46, 49, 51, 54, 56, 57, 58, 61, 65, 66, 68, 71, 72, 73, 74, 75, 76, 79, 83, 84, 85, 87, 88, 89, 91, 93, 95, 97, 98, 99, 102, 109, 110, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127], NumPruned=4096]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 7, 11, 13, 14, 15, 17, 20, 21, 22, 23, 31, 33, 36, 37, 38, 39, 40, 43, 45, 46, 49, 51, 54, 56, 57, 58, 61, 65, 66, 68, 71, 72, 73, 74, 75, 76, 79, 83, 84, 85, 87, 88, 89, 91, 93, 95, 97, 98, 99, 102, 109, 110, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 127], NumPruned=4096]
26752 parameters will be pruned
-------------

2024-07-31 11:10:39.796 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=2048]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=64]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=64]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=18432]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=64]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=18432]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=4096]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=2048]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 7, 8, 11, 12, 17, 18, 20, 22, 23, 30, 32, 36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 57, 60, 61, 63], NumPruned=2048]
47296 parameters will be pruned
-------------

2024-07-31 11:10:39.798 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 10, 11, 16, 18, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 57, 58, 60, 61, 62, 63], NumPruned=2048]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 10, 11, 16, 18, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 57, 58, 60, 61, 62, 63], NumPruned=64]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 10, 11, 16, 18, 20, 21, 22, 24, 25, 26, 27, 31, 32, 37, 38, 40, 41, 43, 44, 45, 46, 51, 52, 57, 58, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 96])>, Index=[33, 37, 38, 42, 43, 48, 50, 52, 53, 54, 56, 57, 58, 59, 63, 64, 69, 70, 72, 73, 75, 76, 77, 78, 83, 84, 89, 90, 92, 93, 94, 95], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[33, 37, 38, 42, 43, 48, 50, 52, 53, 54, 56, 57, 58, 59, 63, 64, 69, 70, 72, 73, 75, 76, 77, 78, 83, 84, 89, 90, 92, 93, 94, 95], NumPruned=4096]
6208 parameters will be pruned
-------------

2024-07-31 11:10:39.800 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 10, 14, 16, 20, 21, 22, 23, 28, 29, 32, 34, 40, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 56, 57, 60, 62, 64, 66, 68, 70, 72, 73, 77, 78, 79, 80, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 102, 103, 107, 108, 110, 113, 115, 117, 120, 122, 123, 124, 125, 126], NumPruned=4096]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 10, 14, 16, 20, 21, 22, 23, 28, 29, 32, 34, 40, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 56, 57, 60, 62, 64, 66, 68, 70, 72, 73, 77, 78, 79, 80, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 102, 103, 107, 108, 110, 113, 115, 117, 120, 122, 123, 124, 125, 126], NumPruned=128]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 10, 14, 16, 20, 21, 22, 23, 28, 29, 32, 34, 40, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 56, 57, 60, 62, 64, 66, 68, 70, 72, 73, 77, 78, 79, 80, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 102, 103, 107, 108, 110, 113, 115, 117, 120, 122, 123, 124, 125, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 10, 14, 16, 20, 21, 22, 23, 28, 29, 32, 34, 40, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 56, 57, 60, 62, 64, 66, 68, 70, 72, 73, 77, 78, 79, 80, 83, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 102, 103, 107, 108, 110, 113, 115, 117, 120, 122, 123, 124, 125, 126], NumPruned=147456]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 131, 133, 138, 142, 144, 148, 149, 150, 151, 156, 157, 160, 162, 168, 170, 171, 172, 173, 175, 177, 179, 180, 181, 182, 184, 185, 188, 190, 192, 194, 196, 198, 200, 201, 205, 206, 207, 208, 211, 213, 215, 216, 219, 220, 221, 222, 223, 224, 225, 230, 231, 235, 236, 238, 241, 243, 245, 248, 250, 251, 252, 253, 254], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 138, 142, 144, 148, 149, 150, 151, 156, 157, 160, 162, 168, 170, 171, 172, 173, 175, 177, 179, 180, 181, 182, 184, 185, 188, 190, 192, 194, 196, 198, 200, 201, 205, 206, 207, 208, 211, 213, 215, 216, 219, 220, 221, 222, 223, 224, 225, 230, 231, 235, 236, 238, 241, 243, 245, 248, 250, 251, 252, 253, 254], NumPruned=4096]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 138, 142, 144, 148, 149, 150, 151, 156, 157, 160, 162, 168, 170, 171, 172, 173, 175, 177, 179, 180, 181, 182, 184, 185, 188, 190, 192, 194, 196, 198, 200, 201, 205, 206, 207, 208, 211, 213, 215, 216, 219, 220, 221, 222, 223, 224, 225, 230, 231, 235, 236, 238, 241, 243, 245, 248, 250, 251, 252, 253, 254], NumPruned=4096]
159872 parameters will be pruned
-------------

2024-07-31 11:10:39.806 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(64, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 7, 9, 11, 13, 18, 19, 20, 21, 22, 23, 25, 26, 31, 34, 35, 37, 42, 47, 48, 49, 50, 51, 52, 53, 55, 56, 60, 61, 63, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 117, 118, 120, 121, 122, 125, 127, 131, 133, 134, 141, 143, 144, 147, 151, 157, 158, 159, 161, 162, 165, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 184, 188, 191, 193, 194, 196, 200, 204, 205, 206, 207, 208, 209, 212, 215, 216, 217, 218, 221, 222, 223, 226, 230, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255], NumPruned=73728]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 9, 11, 13, 18, 19, 20, 21, 22, 23, 25, 26, 31, 34, 35, 37, 42, 47, 48, 49, 50, 51, 52, 53, 55, 56, 60, 61, 63, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 117, 118, 120, 121, 122, 125, 127, 131, 133, 134, 141, 143, 144, 147, 151, 157, 158, 159, 161, 162, 165, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 184, 188, 191, 193, 194, 196, 200, 204, 205, 206, 207, 208, 209, 212, 215, 216, 217, 218, 221, 222, 223, 226, 230, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255], NumPruned=256]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 9, 11, 13, 18, 19, 20, 21, 22, 23, 25, 26, 31, 34, 35, 37, 42, 47, 48, 49, 50, 51, 52, 53, 55, 56, 60, 61, 63, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 117, 118, 120, 121, 122, 125, 127, 131, 133, 134, 141, 143, 144, 147, 151, 157, 158, 159, 161, 162, 165, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 184, 188, 191, 193, 194, 196, 200, 204, 205, 206, 207, 208, 209, 212, 215, 216, 217, 218, 221, 222, 223, 226, 230, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 9, 11, 13, 18, 19, 20, 21, 22, 23, 25, 26, 31, 34, 35, 37, 42, 47, 48, 49, 50, 51, 52, 53, 55, 56, 60, 61, 63, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 117, 118, 120, 121, 122, 125, 127, 131, 133, 134, 141, 143, 144, 147, 151, 157, 158, 159, 161, 162, 165, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 184, 188, 191, 193, 194, 196, 200, 204, 205, 206, 207, 208, 209, 212, 215, 216, 217, 218, 221, 222, 223, 226, 230, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255], NumPruned=16384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 9, 11, 13, 18, 19, 20, 21, 22, 23, 25, 26, 31, 34, 35, 37, 42, 47, 48, 49, 50, 51, 52, 53, 55, 56, 60, 61, 63, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 87, 91, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 117, 118, 120, 121, 122, 125, 127, 131, 133, 134, 141, 143, 144, 147, 151, 157, 158, 159, 161, 162, 165, 166, 168, 169, 170, 171, 173, 174, 178, 180, 181, 182, 183, 184, 188, 191, 193, 194, 196, 200, 204, 205, 206, 207, 208, 209, 212, 215, 216, 217, 218, 221, 222, 223, 226, 230, 232, 233, 234, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 254, 255], NumPruned=16384]
106752 parameters will be pruned
-------------

2024-07-31 11:10:39.808 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=8192]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=128]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=128]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=73728]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=128]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=73728]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=128]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=73728]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=16384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=8192]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=8192]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 6, 7, 8, 10, 11, 12, 13, 15, 17, 20, 21, 23, 24, 26, 28, 29, 33, 35, 36, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 60, 61, 64, 66, 67, 69, 70, 71, 73, 74, 77, 78, 80, 89, 90, 91, 93, 94, 96, 97, 99, 102, 103, 105, 109, 111, 114, 116, 117, 118, 120, 123, 125], NumPruned=8192]
270848 parameters will be pruned
-------------

2024-07-31 11:10:39.811 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 7, 8, 10, 15, 18, 19, 23, 24, 25, 30, 31, 32, 33, 35, 38, 41, 42, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 63, 65, 67, 69, 73, 74, 75, 76, 77, 78, 80, 82, 87, 89, 90, 91, 94, 96, 98, 99, 102, 103, 104, 105, 112, 115, 119, 121, 122, 123, 125, 126, 127], NumPruned=8192]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 7, 8, 10, 15, 18, 19, 23, 24, 25, 30, 31, 32, 33, 35, 38, 41, 42, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 63, 65, 67, 69, 73, 74, 75, 76, 77, 78, 80, 82, 87, 89, 90, 91, 94, 96, 98, 99, 102, 103, 104, 105, 112, 115, 119, 121, 122, 123, 125, 126, 127], NumPruned=128]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 7, 8, 10, 15, 18, 19, 23, 24, 25, 30, 31, 32, 33, 35, 38, 41, 42, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 63, 65, 67, 69, 73, 74, 75, 76, 77, 78, 80, 82, 87, 89, 90, 91, 94, 96, 98, 99, 102, 103, 104, 105, 112, 115, 119, 121, 122, 123, 125, 126, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 192])>, Index=[66, 67, 71, 72, 74, 79, 82, 83, 87, 88, 89, 94, 95, 96, 97, 99, 102, 105, 106, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 125, 127, 129, 131, 133, 137, 138, 139, 140, 141, 142, 144, 146, 151, 153, 154, 155, 158, 160, 162, 163, 166, 167, 168, 169, 176, 179, 183, 185, 186, 187, 189, 190, 191], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[66, 67, 71, 72, 74, 79, 82, 83, 87, 88, 89, 94, 95, 96, 97, 99, 102, 105, 106, 110, 111, 112, 113, 115, 116, 117, 119, 120, 122, 124, 125, 127, 129, 131, 133, 137, 138, 139, 140, 141, 142, 144, 146, 151, 153, 154, 155, 158, 160, 162, 163, 166, 167, 168, 169, 176, 179, 183, 185, 186, 187, 189, 190, 191], NumPruned=16384]
24704 parameters will be pruned
-------------

2024-07-31 11:10:39.813 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 27, 31, 35, 36, 45, 47, 50, 53, 55, 59, 62, 64, 65, 66, 67, 70, 72, 73, 75, 76, 77, 79, 80, 84, 88, 89, 90, 92, 94, 96, 99, 102, 104, 107, 108, 114, 119, 120, 122, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 145, 146, 147, 148, 151, 153, 157, 158, 159, 163, 165, 166, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 188, 191, 193, 195, 196, 197, 198, 199, 200, 202, 209, 210, 211, 212, 213, 215, 219, 224, 225, 226, 227, 228, 229, 232, 233, 238, 244, 245, 246, 247, 249, 250, 251, 252, 253], NumPruned=16384]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 27, 31, 35, 36, 45, 47, 50, 53, 55, 59, 62, 64, 65, 66, 67, 70, 72, 73, 75, 76, 77, 79, 80, 84, 88, 89, 90, 92, 94, 96, 99, 102, 104, 107, 108, 114, 119, 120, 122, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 145, 146, 147, 148, 151, 153, 157, 158, 159, 163, 165, 166, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 188, 191, 193, 195, 196, 197, 198, 199, 200, 202, 209, 210, 211, 212, 213, 215, 219, 224, 225, 226, 227, 228, 229, 232, 233, 238, 244, 245, 246, 247, 249, 250, 251, 252, 253], NumPruned=256]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 27, 31, 35, 36, 45, 47, 50, 53, 55, 59, 62, 64, 65, 66, 67, 70, 72, 73, 75, 76, 77, 79, 80, 84, 88, 89, 90, 92, 94, 96, 99, 102, 104, 107, 108, 114, 119, 120, 122, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 145, 146, 147, 148, 151, 153, 157, 158, 159, 163, 165, 166, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 188, 191, 193, 195, 196, 197, 198, 199, 200, 202, 209, 210, 211, 212, 213, 215, 219, 224, 225, 226, 227, 228, 229, 232, 233, 238, 244, 245, 246, 247, 249, 250, 251, 252, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 5, 7, 8, 9, 10, 11, 12, 14, 16, 20, 22, 24, 25, 27, 31, 35, 36, 45, 47, 50, 53, 55, 59, 62, 64, 65, 66, 67, 70, 72, 73, 75, 76, 77, 79, 80, 84, 88, 89, 90, 92, 94, 96, 99, 102, 104, 107, 108, 114, 119, 120, 122, 123, 124, 125, 127, 128, 130, 132, 133, 134, 135, 137, 140, 141, 142, 143, 145, 146, 147, 148, 151, 153, 157, 158, 159, 163, 165, 166, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 188, 191, 193, 195, 196, 197, 198, 199, 200, 202, 209, 210, 211, 212, 213, 215, 219, 224, 225, 226, 227, 228, 229, 232, 233, 238, 244, 245, 246, 247, 249, 250, 251, 252, 253], NumPruned=589824]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 283, 287, 291, 292, 301, 303, 306, 309, 311, 315, 318, 320, 321, 322, 323, 326, 328, 329, 331, 332, 333, 335, 336, 340, 344, 345, 346, 348, 350, 352, 355, 358, 360, 363, 364, 370, 375, 376, 378, 379, 380, 381, 383, 384, 386, 388, 389, 390, 391, 393, 396, 397, 398, 399, 401, 402, 403, 404, 407, 409, 413, 414, 415, 419, 421, 422, 424, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 444, 447, 449, 451, 452, 453, 454, 455, 456, 458, 465, 466, 467, 468, 469, 471, 475, 480, 481, 482, 483, 484, 485, 488, 489, 494, 500, 501, 502, 503, 505, 506, 507, 508, 509], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 283, 287, 291, 292, 301, 303, 306, 309, 311, 315, 318, 320, 321, 322, 323, 326, 328, 329, 331, 332, 333, 335, 336, 340, 344, 345, 346, 348, 350, 352, 355, 358, 360, 363, 364, 370, 375, 376, 378, 379, 380, 381, 383, 384, 386, 388, 389, 390, 391, 393, 396, 397, 398, 399, 401, 402, 403, 404, 407, 409, 413, 414, 415, 419, 421, 422, 424, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 444, 447, 449, 451, 452, 453, 454, 455, 456, 458, 465, 466, 467, 468, 469, 471, 475, 480, 481, 482, 483, 484, 485, 488, 489, 494, 500, 501, 502, 503, 505, 506, 507, 508, 509], NumPruned=16384]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[257, 261, 263, 264, 265, 266, 267, 268, 270, 272, 276, 278, 280, 281, 283, 287, 291, 292, 301, 303, 306, 309, 311, 315, 318, 320, 321, 322, 323, 326, 328, 329, 331, 332, 333, 335, 336, 340, 344, 345, 346, 348, 350, 352, 355, 358, 360, 363, 364, 370, 375, 376, 378, 379, 380, 381, 383, 384, 386, 388, 389, 390, 391, 393, 396, 397, 398, 399, 401, 402, 403, 404, 407, 409, 413, 414, 415, 419, 421, 422, 424, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 439, 440, 444, 447, 449, 451, 452, 453, 454, 455, 456, 458, 465, 466, 467, 468, 469, 471, 475, 480, 481, 482, 483, 484, 485, 488, 489, 494, 500, 501, 502, 503, 505, 506, 507, 508, 509], NumPruned=16384]
639232 parameters will be pruned
-------------

2024-07-31 11:10:39.820 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(128, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 47, 49, 53, 54, 60, 62, 64, 65, 66, 67, 68, 70, 71, 75, 77, 78, 79, 80, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 125, 126, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 173, 176, 177, 178, 179, 186, 188, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 225, 227, 229, 230, 232, 236, 238, 240, 242, 244, 245, 247, 253, 255, 257, 258, 262, 265, 267, 272, 274, 276, 279, 281, 282, 283, 285, 286, 288, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 311, 314, 315, 317, 319, 320, 321, 325, 327, 328, 329, 330, 332, 334, 337, 338, 339, 341, 342, 344, 345, 347, 349, 350, 351, 353, 354, 356, 358, 360, 361, 362, 364, 371, 376, 377, 380, 382, 385, 389, 390, 391, 392, 393, 395, 396, 398, 403, 405, 406, 408, 409, 410, 414, 416, 420, 421, 422, 425, 427, 428, 430, 432, 434, 440, 442, 444, 445, 447, 450, 451, 456, 457, 460, 461, 466, 467, 469, 470, 471, 473, 474, 476, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 494, 496, 501, 502, 503, 504, 508, 511], NumPruned=294912]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 47, 49, 53, 54, 60, 62, 64, 65, 66, 67, 68, 70, 71, 75, 77, 78, 79, 80, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 125, 126, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 173, 176, 177, 178, 179, 186, 188, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 225, 227, 229, 230, 232, 236, 238, 240, 242, 244, 245, 247, 253, 255, 257, 258, 262, 265, 267, 272, 274, 276, 279, 281, 282, 283, 285, 286, 288, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 311, 314, 315, 317, 319, 320, 321, 325, 327, 328, 329, 330, 332, 334, 337, 338, 339, 341, 342, 344, 345, 347, 349, 350, 351, 353, 354, 356, 358, 360, 361, 362, 364, 371, 376, 377, 380, 382, 385, 389, 390, 391, 392, 393, 395, 396, 398, 403, 405, 406, 408, 409, 410, 414, 416, 420, 421, 422, 425, 427, 428, 430, 432, 434, 440, 442, 444, 445, 447, 450, 451, 456, 457, 460, 461, 466, 467, 469, 470, 471, 473, 474, 476, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 494, 496, 501, 502, 503, 504, 508, 511], NumPruned=512]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 47, 49, 53, 54, 60, 62, 64, 65, 66, 67, 68, 70, 71, 75, 77, 78, 79, 80, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 125, 126, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 173, 176, 177, 178, 179, 186, 188, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 225, 227, 229, 230, 232, 236, 238, 240, 242, 244, 245, 247, 253, 255, 257, 258, 262, 265, 267, 272, 274, 276, 279, 281, 282, 283, 285, 286, 288, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 311, 314, 315, 317, 319, 320, 321, 325, 327, 328, 329, 330, 332, 334, 337, 338, 339, 341, 342, 344, 345, 347, 349, 350, 351, 353, 354, 356, 358, 360, 361, 362, 364, 371, 376, 377, 380, 382, 385, 389, 390, 391, 392, 393, 395, 396, 398, 403, 405, 406, 408, 409, 410, 414, 416, 420, 421, 422, 425, 427, 428, 430, 432, 434, 440, 442, 444, 445, 447, 450, 451, 456, 457, 460, 461, 466, 467, 469, 470, 471, 473, 474, 476, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 494, 496, 501, 502, 503, 504, 508, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 47, 49, 53, 54, 60, 62, 64, 65, 66, 67, 68, 70, 71, 75, 77, 78, 79, 80, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 125, 126, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 173, 176, 177, 178, 179, 186, 188, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 225, 227, 229, 230, 232, 236, 238, 240, 242, 244, 245, 247, 253, 255, 257, 258, 262, 265, 267, 272, 274, 276, 279, 281, 282, 283, 285, 286, 288, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 311, 314, 315, 317, 319, 320, 321, 325, 327, 328, 329, 330, 332, 334, 337, 338, 339, 341, 342, 344, 345, 347, 349, 350, 351, 353, 354, 356, 358, 360, 361, 362, 364, 371, 376, 377, 380, 382, 385, 389, 390, 391, 392, 393, 395, 396, 398, 403, 405, 406, 408, 409, 410, 414, 416, 420, 421, 422, 425, 427, 428, 430, 432, 434, 440, 442, 444, 445, 447, 450, 451, 456, 457, 460, 461, 466, 467, 469, 470, 471, 473, 474, 476, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 494, 496, 501, 502, 503, 504, 508, 511], NumPruned=65536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 7, 11, 16, 20, 21, 22, 23, 27, 28, 29, 31, 33, 35, 36, 37, 38, 39, 42, 46, 47, 49, 53, 54, 60, 62, 64, 65, 66, 67, 68, 70, 71, 75, 77, 78, 79, 80, 82, 90, 91, 93, 95, 96, 97, 100, 102, 103, 105, 109, 110, 111, 114, 115, 118, 119, 120, 121, 122, 125, 126, 134, 136, 137, 138, 139, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 173, 176, 177, 178, 179, 186, 188, 190, 191, 194, 196, 199, 202, 206, 207, 208, 209, 211, 213, 215, 222, 225, 227, 229, 230, 232, 236, 238, 240, 242, 244, 245, 247, 253, 255, 257, 258, 262, 265, 267, 272, 274, 276, 279, 281, 282, 283, 285, 286, 288, 294, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 311, 314, 315, 317, 319, 320, 321, 325, 327, 328, 329, 330, 332, 334, 337, 338, 339, 341, 342, 344, 345, 347, 349, 350, 351, 353, 354, 356, 358, 360, 361, 362, 364, 371, 376, 377, 380, 382, 385, 389, 390, 391, 392, 393, 395, 396, 398, 403, 405, 406, 408, 409, 410, 414, 416, 420, 421, 422, 425, 427, 428, 430, 432, 434, 440, 442, 444, 445, 447, 450, 451, 456, 457, 460, 461, 466, 467, 469, 470, 471, 473, 474, 476, 480, 481, 483, 484, 485, 486, 487, 489, 491, 492, 494, 496, 501, 502, 503, 504, 508, 511], NumPruned=65536]
426496 parameters will be pruned
-------------

2024-07-31 11:10:39.826 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=32768]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=256]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=256]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=294912]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=65536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 9, 10, 11, 12, 15, 16, 17, 21, 22, 25, 26, 27, 28, 31, 35, 36, 39, 41, 45, 46, 47, 49, 50, 51, 53, 54, 58, 62, 66, 67, 68, 70, 71, 72, 77, 79, 85, 87, 88, 89, 92, 93, 94, 95, 100, 103, 105, 107, 108, 109, 110, 112, 115, 118, 122, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 142, 145, 146, 154, 156, 159, 160, 164, 166, 167, 169, 170, 171, 172, 174, 177, 178, 179, 182, 183, 184, 185, 188, 191, 193, 194, 197, 199, 200, 201, 202, 203, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 224, 226, 229, 231, 232, 237, 238, 239, 242, 243, 246, 249, 250, 251, 253, 255], NumPruned=32768]
426496 parameters will be pruned
-------------

2024-07-31 11:10:39.835 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 4, 6, 8, 12, 14, 17, 18, 19, 25, 26, 27, 28, 30, 32, 40, 41, 42, 43, 44, 46, 47, 52, 54, 55, 56, 58, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 84, 88, 89, 91, 92, 94, 96, 97, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 128, 133, 134, 135, 138, 139, 142, 146, 148, 151, 153, 155, 157, 160, 161, 162, 165, 171, 172, 176, 178, 179, 181, 184, 186, 188, 189, 191, 197, 198, 199, 202, 203, 204, 208, 209, 210, 211, 213, 216, 217, 218, 219, 221, 222, 225, 226, 228, 229, 230, 235, 237, 238, 239, 243, 245, 248, 253, 254, 255], NumPruned=32768]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 4, 6, 8, 12, 14, 17, 18, 19, 25, 26, 27, 28, 30, 32, 40, 41, 42, 43, 44, 46, 47, 52, 54, 55, 56, 58, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 84, 88, 89, 91, 92, 94, 96, 97, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 128, 133, 134, 135, 138, 139, 142, 146, 148, 151, 153, 155, 157, 160, 161, 162, 165, 171, 172, 176, 178, 179, 181, 184, 186, 188, 189, 191, 197, 198, 199, 202, 203, 204, 208, 209, 210, 211, 213, 216, 217, 218, 219, 221, 222, 225, 226, 228, 229, 230, 235, 237, 238, 239, 243, 245, 248, 253, 254, 255], NumPruned=256]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 4, 6, 8, 12, 14, 17, 18, 19, 25, 26, 27, 28, 30, 32, 40, 41, 42, 43, 44, 46, 47, 52, 54, 55, 56, 58, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77, 78, 80, 81, 84, 88, 89, 91, 92, 94, 96, 97, 98, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 128, 133, 134, 135, 138, 139, 142, 146, 148, 151, 153, 155, 157, 160, 161, 162, 165, 171, 172, 176, 178, 179, 181, 184, 186, 188, 189, 191, 197, 198, 199, 202, 203, 204, 208, 209, 210, 211, 213, 216, 217, 218, 219, 221, 222, 225, 226, 228, 229, 230, 235, 237, 238, 239, 243, 245, 248, 253, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 384])>, Index=[128, 129, 131, 132, 134, 136, 140, 142, 145, 146, 147, 153, 154, 155, 156, 158, 160, 168, 169, 170, 171, 172, 174, 175, 180, 182, 183, 184, 186, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 212, 216, 217, 219, 220, 222, 224, 225, 226, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 253, 256, 261, 262, 263, 266, 267, 270, 274, 276, 279, 281, 283, 285, 288, 289, 290, 293, 299, 300, 304, 306, 307, 309, 312, 314, 316, 317, 319, 325, 326, 327, 330, 331, 332, 336, 337, 338, 339, 341, 344, 345, 346, 347, 349, 350, 353, 354, 356, 357, 358, 363, 365, 366, 367, 371, 373, 376, 381, 382, 383], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(384, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[128, 129, 131, 132, 134, 136, 140, 142, 145, 146, 147, 153, 154, 155, 156, 158, 160, 168, 169, 170, 171, 172, 174, 175, 180, 182, 183, 184, 186, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 204, 205, 206, 208, 209, 212, 216, 217, 219, 220, 222, 224, 225, 226, 234, 235, 236, 237, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 253, 256, 261, 262, 263, 266, 267, 270, 274, 276, 279, 281, 283, 285, 288, 289, 290, 293, 299, 300, 304, 306, 307, 309, 312, 314, 316, 317, 319, 325, 326, 327, 330, 331, 332, 336, 337, 338, 339, 341, 344, 345, 346, 347, 349, 350, 353, 354, 356, 357, 358, 363, 365, 366, 367, 371, 373, 376, 381, 382, 383], NumPruned=65536]
98560 parameters will be pruned
-------------

2024-07-31 11:10:39.836 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 12, 14, 17, 18, 20, 21, 22, 23, 25, 30, 33, 41, 43, 44, 47, 48, 52, 54, 55, 58, 61, 62, 63, 66, 67, 72, 74, 76, 77, 80, 82, 88, 91, 95, 96, 98, 99, 100, 103, 104, 108, 110, 114, 115, 121, 122, 123, 124, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 162, 164, 165, 167, 168, 170, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 216, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 242, 246, 247, 249, 250, 252, 253, 254, 259, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 298, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 323, 326, 330, 334, 339, 341, 342, 343, 345, 348, 350, 352, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 374, 378, 379, 381, 384, 385, 387, 394, 395, 399, 403, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 429, 433, 437, 438, 439, 440, 441, 442, 445, 451, 452, 454, 456, 459, 460, 461, 462, 463, 464, 468, 469, 471, 477, 478, 482, 484, 485, 490, 492, 495, 496, 497, 504, 507, 510, 511], NumPruned=65536]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 12, 14, 17, 18, 20, 21, 22, 23, 25, 30, 33, 41, 43, 44, 47, 48, 52, 54, 55, 58, 61, 62, 63, 66, 67, 72, 74, 76, 77, 80, 82, 88, 91, 95, 96, 98, 99, 100, 103, 104, 108, 110, 114, 115, 121, 122, 123, 124, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 162, 164, 165, 167, 168, 170, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 216, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 242, 246, 247, 249, 250, 252, 253, 254, 259, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 298, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 323, 326, 330, 334, 339, 341, 342, 343, 345, 348, 350, 352, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 374, 378, 379, 381, 384, 385, 387, 394, 395, 399, 403, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 429, 433, 437, 438, 439, 440, 441, 442, 445, 451, 452, 454, 456, 459, 460, 461, 462, 463, 464, 468, 469, 471, 477, 478, 482, 484, 485, 490, 492, 495, 496, 497, 504, 507, 510, 511], NumPruned=512]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 12, 14, 17, 18, 20, 21, 22, 23, 25, 30, 33, 41, 43, 44, 47, 48, 52, 54, 55, 58, 61, 62, 63, 66, 67, 72, 74, 76, 77, 80, 82, 88, 91, 95, 96, 98, 99, 100, 103, 104, 108, 110, 114, 115, 121, 122, 123, 124, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 162, 164, 165, 167, 168, 170, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 216, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 242, 246, 247, 249, 250, 252, 253, 254, 259, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 298, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 323, 326, 330, 334, 339, 341, 342, 343, 345, 348, 350, 352, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 374, 378, 379, 381, 384, 385, 387, 394, 395, 399, 403, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 429, 433, 437, 438, 439, 440, 441, 442, 445, 451, 452, 454, 456, 459, 460, 461, 462, 463, 464, 468, 469, 471, 477, 478, 482, 484, 485, 490, 492, 495, 496, 497, 504, 507, 510, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 3, 4, 5, 7, 10, 12, 14, 17, 18, 20, 21, 22, 23, 25, 30, 33, 41, 43, 44, 47, 48, 52, 54, 55, 58, 61, 62, 63, 66, 67, 72, 74, 76, 77, 80, 82, 88, 91, 95, 96, 98, 99, 100, 103, 104, 108, 110, 114, 115, 121, 122, 123, 124, 127, 128, 130, 132, 133, 138, 139, 141, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 162, 164, 165, 167, 168, 170, 171, 175, 178, 179, 180, 181, 184, 185, 189, 190, 192, 193, 196, 197, 199, 201, 202, 203, 204, 205, 206, 209, 211, 216, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 240, 241, 242, 246, 247, 249, 250, 252, 253, 254, 259, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 295, 297, 298, 302, 303, 305, 306, 307, 308, 309, 310, 311, 314, 316, 317, 318, 319, 323, 326, 330, 334, 339, 341, 342, 343, 345, 348, 350, 352, 353, 354, 355, 356, 360, 363, 364, 365, 367, 368, 371, 372, 374, 378, 379, 381, 384, 385, 387, 394, 395, 399, 403, 406, 408, 409, 410, 412, 413, 414, 415, 416, 417, 419, 422, 423, 424, 425, 426, 429, 433, 437, 438, 439, 440, 441, 442, 445, 451, 452, 454, 456, 459, 460, 461, 462, 463, 464, 468, 469, 471, 477, 478, 482, 484, 485, 490, 492, 495, 496, 497, 504, 507, 510, 511], NumPruned=65536]
131584 parameters will be pruned
-------------

2024-07-31 11:10:39.841 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 91, 96, 98, 99, 102, 103, 104, 106, 108, 110, 111, 117, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 147, 149, 152, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 186, 188, 193, 196, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 225, 226, 230, 233, 237, 245, 246, 247, 252, 254, 255], NumPruned=32768]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 91, 96, 98, 99, 102, 103, 104, 106, 108, 110, 111, 117, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 147, 149, 152, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 186, 188, 193, 196, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 225, 226, 230, 233, 237, 245, 246, 247, 252, 254, 255], NumPruned=256]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 91, 96, 98, 99, 102, 103, 104, 106, 108, 110, 111, 117, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 147, 149, 152, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 186, 188, 193, 196, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 225, 226, 230, 233, 237, 245, 246, 247, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 91, 96, 98, 99, 102, 103, 104, 106, 108, 110, 111, 117, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 147, 149, 152, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 186, 188, 193, 196, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 225, 226, 230, 233, 237, 245, 246, 247, 252, 254, 255, 257, 258, 263, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 285, 287, 288, 289, 291, 292, 293, 294, 298, 300, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 319, 325, 326, 328, 329, 330, 331, 333, 335, 336, 337, 340, 341, 342, 343, 344, 347, 352, 354, 355, 358, 359, 360, 362, 364, 366, 367, 373, 374, 375, 379, 380, 382, 383, 384, 385, 388, 389, 390, 394, 397, 399, 403, 405, 408, 414, 415, 416, 417, 418, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 440, 442, 444, 449, 452, 455, 456, 457, 459, 463, 464, 465, 466, 467, 468, 471, 472, 474, 476, 477, 479, 481, 482, 486, 489, 493, 501, 502, 503, 508, 510, 511, 513, 514, 519, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 535, 541, 543, 544, 545, 547, 548, 549, 550, 554, 556, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 581, 582, 584, 585, 586, 587, 589, 591, 592, 593, 596, 597, 598, 599, 600, 603, 608, 610, 611, 614, 615, 616, 618, 620, 622, 623, 629, 630, 631, 635, 636, 638, 639, 640, 641, 644, 645, 646, 650, 653, 655, 659, 661, 664, 670, 671, 672, 673, 674, 679, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 696, 698, 700, 705, 708, 711, 712, 713, 715, 719, 720, 721, 722, 723, 724, 727, 728, 730, 732, 733, 735, 737, 738, 742, 745, 749, 757, 758, 759, 764, 766, 767, 769, 770, 775, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 791, 797, 799, 800, 801, 803, 804, 805, 806, 810, 812, 815, 817, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 837, 838, 840, 841, 842, 843, 845, 847, 848, 849, 852, 853, 854, 855, 856, 859, 864, 866, 867, 870, 871, 872, 874, 876, 878, 879, 885, 886, 887, 891, 892, 894, 895, 896, 897, 900, 901, 902, 906, 909, 911, 915, 917, 920, 926, 927, 928, 929, 930, 935, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 952, 954, 956, 961, 964, 967, 968, 969, 971, 975, 976, 977, 978, 979, 980, 983, 984, 986, 988, 989, 991, 993, 994, 998, 1001, 1005, 1013, 1014, 1015, 1020, 1022, 1023], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 91, 96, 98, 99, 102, 103, 104, 106, 108, 110, 111, 117, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 147, 149, 152, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 186, 188, 193, 196, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 225, 226, 230, 233, 237, 245, 246, 247, 252, 254, 255, 257, 258, 263, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 279, 285, 287, 288, 289, 291, 292, 293, 294, 298, 300, 303, 305, 306, 307, 310, 312, 313, 314, 315, 316, 317, 319, 325, 326, 328, 329, 330, 331, 333, 335, 336, 337, 340, 341, 342, 343, 344, 347, 352, 354, 355, 358, 359, 360, 362, 364, 366, 367, 373, 374, 375, 379, 380, 382, 383, 384, 385, 388, 389, 390, 394, 397, 399, 403, 405, 408, 414, 415, 416, 417, 418, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 440, 442, 444, 449, 452, 455, 456, 457, 459, 463, 464, 465, 466, 467, 468, 471, 472, 474, 476, 477, 479, 481, 482, 486, 489, 493, 501, 502, 503, 508, 510, 511, 513, 514, 519, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 535, 541, 543, 544, 545, 547, 548, 549, 550, 554, 556, 559, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 581, 582, 584, 585, 586, 587, 589, 591, 592, 593, 596, 597, 598, 599, 600, 603, 608, 610, 611, 614, 615, 616, 618, 620, 622, 623, 629, 630, 631, 635, 636, 638, 639, 640, 641, 644, 645, 646, 650, 653, 655, 659, 661, 664, 670, 671, 672, 673, 674, 679, 681, 682, 683, 684, 685, 687, 688, 689, 690, 691, 696, 698, 700, 705, 708, 711, 712, 713, 715, 719, 720, 721, 722, 723, 724, 727, 728, 730, 732, 733, 735, 737, 738, 742, 745, 749, 757, 758, 759, 764, 766, 767, 769, 770, 775, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 791, 797, 799, 800, 801, 803, 804, 805, 806, 810, 812, 815, 817, 818, 819, 822, 824, 825, 826, 827, 828, 829, 831, 837, 838, 840, 841, 842, 843, 845, 847, 848, 849, 852, 853, 854, 855, 856, 859, 864, 866, 867, 870, 871, 872, 874, 876, 878, 879, 885, 886, 887, 891, 892, 894, 895, 896, 897, 900, 901, 902, 906, 909, 911, 915, 917, 920, 926, 927, 928, 929, 930, 935, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 952, 954, 956, 961, 964, 967, 968, 969, 971, 975, 976, 977, 978, 979, 980, 983, 984, 986, 988, 989, 991, 993, 994, 998, 1001, 1005, 1013, 1014, 1015, 1020, 1022, 1023], NumPruned=262144]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 91, 96, 98, 99, 102, 103, 104, 106, 108, 110, 111, 117, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 147, 149, 152, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 186, 188, 193, 196, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 225, 226, 230, 233, 237, 245, 246, 247, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 91, 96, 98, 99, 102, 103, 104, 106, 108, 110, 111, 117, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 147, 149, 152, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 186, 188, 193, 196, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 225, 226, 230, 233, 237, 245, 246, 247, 252, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 23, 29, 31, 32, 33, 35, 36, 37, 38, 42, 44, 47, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 63, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 84, 85, 86, 87, 88, 91, 96, 98, 99, 102, 103, 104, 106, 108, 110, 111, 117, 118, 119, 123, 124, 126, 127, 128, 129, 132, 133, 134, 138, 141, 143, 147, 149, 152, 158, 159, 160, 161, 162, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 184, 186, 188, 193, 196, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 215, 216, 218, 220, 221, 223, 225, 226, 230, 233, 237, 245, 246, 247, 252, 254, 255], NumPruned=0]
295168 parameters will be pruned
-------------

2024-07-31 11:10:39.848 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 88, 91, 92, 97, 98, 103, 105, 107, 108, 109, 110, 111, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 157, 158, 159, 160, 163, 167, 168, 170, 171, 173, 175, 183, 184, 187, 188, 189, 190, 195, 196, 203, 205, 210, 211, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 295, 296, 300, 302, 304, 305, 308, 309, 312, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 334, 344, 345, 349, 350, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 374, 375, 377, 378, 381, 383, 384, 387, 388, 389, 390, 394, 395, 398, 399, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 437, 440, 441, 442, 443, 446, 447, 448, 449, 451, 453, 458, 460, 464, 466, 467, 468, 469, 470, 472, 476, 478, 481, 485, 487, 488, 489, 494, 495, 496, 497, 498, 499, 504, 508, 509], NumPruned=131072]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 88, 91, 92, 97, 98, 103, 105, 107, 108, 109, 110, 111, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 157, 158, 159, 160, 163, 167, 168, 170, 171, 173, 175, 183, 184, 187, 188, 189, 190, 195, 196, 203, 205, 210, 211, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 295, 296, 300, 302, 304, 305, 308, 309, 312, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 334, 344, 345, 349, 350, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 374, 375, 377, 378, 381, 383, 384, 387, 388, 389, 390, 394, 395, 398, 399, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 437, 440, 441, 442, 443, 446, 447, 448, 449, 451, 453, 458, 460, 464, 466, 467, 468, 469, 470, 472, 476, 478, 481, 485, 487, 488, 489, 494, 495, 496, 497, 498, 499, 504, 508, 509], NumPruned=512]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 88, 91, 92, 97, 98, 103, 105, 107, 108, 109, 110, 111, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 157, 158, 159, 160, 163, 167, 168, 170, 171, 173, 175, 183, 184, 187, 188, 189, 190, 195, 196, 203, 205, 210, 211, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 295, 296, 300, 302, 304, 305, 308, 309, 312, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 334, 344, 345, 349, 350, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 374, 375, 377, 378, 381, 383, 384, 387, 388, 389, 390, 394, 395, 398, 399, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 437, 440, 441, 442, 443, 446, 447, 448, 449, 451, 453, 458, 460, 464, 466, 467, 468, 469, 470, 472, 476, 478, 481, 485, 487, 488, 489, 494, 495, 496, 497, 498, 499, 504, 508, 509], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 3, 4, 5, 6, 7, 9, 10, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 51, 52, 53, 58, 62, 63, 64, 65, 67, 70, 71, 73, 74, 75, 76, 77, 80, 81, 86, 87, 88, 91, 92, 97, 98, 103, 105, 107, 108, 109, 110, 111, 117, 125, 128, 129, 134, 135, 137, 139, 142, 144, 146, 150, 152, 153, 154, 157, 158, 159, 160, 163, 167, 168, 170, 171, 173, 175, 183, 184, 187, 188, 189, 190, 195, 196, 203, 205, 210, 211, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 248, 250, 251, 252, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 271, 272, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 295, 296, 300, 302, 304, 305, 308, 309, 312, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 330, 331, 332, 334, 344, 345, 349, 350, 352, 353, 355, 356, 357, 360, 362, 363, 366, 368, 369, 373, 374, 375, 377, 378, 381, 383, 384, 387, 388, 389, 390, 394, 395, 398, 399, 403, 405, 410, 412, 413, 414, 416, 417, 423, 427, 432, 437, 440, 441, 442, 443, 446, 447, 448, 449, 451, 453, 458, 460, 464, 466, 467, 468, 469, 470, 472, 476, 478, 481, 485, 487, 488, 489, 494, 495, 496, 497, 498, 499, 504, 508, 509], NumPruned=65536]
197120 parameters will be pruned
-------------

2024-07-31 11:10:39.850 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 4101302

2024-07-31 11:10:39.889 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-08-01 10:34:09.055 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=648]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=3456]
4116 parameters will be pruned
-------------

2024-08-01 10:34:09.060 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(26, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=2808]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
3600 parameters will be pruned
-------------

2024-08-01 10:34:09.062 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=1728]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=192]
2640 parameters will be pruned
-------------

2024-08-01 10:34:09.064 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 14, 25], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 58])>, Index=[31, 32, 35, 37, 40, 51], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(58, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[31, 32, 35, 37, 40, 51], NumPruned=384]
708 parameters will be pruned
-------------

2024-08-01 10:34:09.065 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=624]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=13824]
14472 parameters will be pruned
-------------

2024-08-01 10:34:09.067 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(52, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=11700]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
14950 parameters will be pruned
-------------

2024-08-01 10:34:09.068 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
18204 parameters will be pruned
-------------

2024-08-01 10:34:09.071 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 116])>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(116, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=1536]
2796 parameters will be pruned
-------------

2024-08-01 10:34:09.073 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(104, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=2600]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=57600]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=1600]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=1600]
63450 parameters will be pruned
-------------

2024-08-01 10:34:09.075 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(103, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=47277]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
60435 parameters will be pruned
-------------

2024-08-01 10:34:09.078 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=6400]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
107725 parameters will be pruned
-------------

2024-08-01 10:34:09.085 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 103, 231])>, Index=[110, 111, 113, 134, 135, 136, 138, 144, 151, 152, 155, 157, 158, 163, 164, 176, 177, 181, 189, 197, 199, 205, 215, 225, 228], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(231, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[110, 111, 113, 134, 135, 136, 138, 144, 151, 152, 155, 157, 158, 163, 164, 176, 177, 181, 189, 197, 199, 205, 215, 225, 228], NumPruned=6400]
11575 parameters will be pruned
-------------

2024-08-01 10:34:09.087 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(206, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=10506]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
258672 parameters will be pruned
-------------

2024-08-01 10:34:09.095 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(205, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=188190]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
240618 parameters will be pruned
-------------

2024-08-01 10:34:09.097 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=13056]
177786 parameters will be pruned
-------------

2024-08-01 10:34:09.099 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 205, 461])>, Index=[205, 206, 208, 211, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 384, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(461, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[205, 206, 208, 211, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 384, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=26112]
47124 parameters will be pruned
-------------

2024-08-01 10:34:09.101 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(410, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=41820]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=26112]
68136 parameters will be pruned
-------------

2024-08-01 10:34:09.107 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[10, 522, 12, 524, 18, 530, 1022, 535, 23, 31, 543, 32, 33, 544, 35, 36, 37, 545, 547, 548, 549, 42, 554, 44, 556, 50, 562, 57, 58, 59, 569, 61, 570, 63, 571, 573, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 247, 759, 254, 766, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 314, 315, 825, 317, 826, 319, 827, 829, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 1015, 503, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 522, 12, 524, 18, 530, 1022, 535, 23, 31, 543, 32, 33, 544, 35, 36, 37, 545, 547, 548, 549, 42, 554, 44, 556, 50, 562, 57, 58, 59, 569, 61, 570, 63, 571, 573, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 247, 759, 254, 766, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 314, 315, 825, 317, 826, 319, 827, 829, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 1015, 503, 510], NumPruned=104448]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
125460 parameters will be pruned
-------------

2024-08-01 10:34:09.114 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(820, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=83640]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=26112]
109956 parameters will be pruned
-------------

2024-08-01 10:34:09.116 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 5689903

2024-08-01 10:34:09.159 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-08-01 10:38:41.700 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=648]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=3456]
4116 parameters will be pruned
-------------

2024-08-01 10:38:41.704 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(26, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=2808]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
3600 parameters will be pruned
-------------

2024-08-01 10:38:41.705 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=1728]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=192]
2640 parameters will be pruned
-------------

2024-08-01 10:38:41.706 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 14, 25], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 58])>, Index=[31, 32, 35, 37, 40, 51], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(58, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[31, 32, 35, 37, 40, 51], NumPruned=384]
708 parameters will be pruned
-------------

2024-08-01 10:38:41.708 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=624]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=13824]
14472 parameters will be pruned
-------------

2024-08-01 10:38:41.710 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(52, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=11700]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
14950 parameters will be pruned
-------------

2024-08-01 10:38:41.711 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
18204 parameters will be pruned
-------------

2024-08-01 10:38:41.713 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 116])>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(116, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=1536]
2796 parameters will be pruned
-------------

2024-08-01 10:38:41.714 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(104, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=2600]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 107, 108, 122, 123, 124], NumPruned=57600]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=1600]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 235, 236, 250, 251, 252], NumPruned=1600]
63450 parameters will be pruned
-------------

2024-08-01 10:38:41.716 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(103, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=47277]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 96, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 178, 180, 182, 183, 191, 194, 204, 206, 215, 216, 217, 218, 223, 242, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
60435 parameters will be pruned
-------------

2024-08-01 10:38:41.717 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=6400]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 17, 21, 28, 29, 38, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 97, 102, 109, 118, 123], NumPruned=3200]
107725 parameters will be pruned
-------------

2024-08-01 10:38:41.725 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 8, 10, 31, 32, 33, 35, 41, 48, 49, 52, 54, 55, 60, 61, 73, 74, 78, 86, 94, 96, 102, 112, 122, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 103, 231])>, Index=[110, 111, 113, 134, 135, 136, 138, 144, 151, 152, 155, 157, 158, 163, 164, 176, 177, 181, 189, 197, 199, 205, 215, 225, 228], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(231, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[110, 111, 113, 134, 135, 136, 138, 144, 151, 152, 155, 157, 158, 163, 164, 176, 177, 181, 189, 197, 199, 205, 215, 225, 228], NumPruned=6400]
11575 parameters will be pruned
-------------

2024-08-01 10:38:41.726 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(206, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=10506]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 8, 9, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 134, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[263, 264, 265, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 390, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
258672 parameters will be pruned
-------------

2024-08-01 10:38:41.735 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(205, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=188190]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 91, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
240618 parameters will be pruned
-------------

2024-08-01 10:38:41.738 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 207, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=13056]
177786 parameters will be pruned
-------------

2024-08-01 10:38:41.741 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 6, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 179, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 205, 461])>, Index=[205, 206, 208, 211, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 384, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(461, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[205, 206, 208, 211, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 384, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=26112]
47124 parameters will be pruned
-------------

2024-08-01 10:38:41.743 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(410, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=41820]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 114, 123, 133, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 252, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 419, 423, 424, 425, 426, 438, 439, 442, 459, 464, 469, 477, 478, 482, 490, 495, 511], NumPruned=26112]
68136 parameters will be pruned
-------------

2024-08-01 10:38:41.748 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[10, 522, 12, 524, 18, 530, 1022, 535, 23, 31, 543, 32, 33, 544, 35, 36, 37, 545, 547, 548, 549, 42, 554, 44, 556, 50, 562, 57, 58, 59, 569, 61, 570, 63, 571, 573, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 247, 759, 254, 766, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 314, 315, 825, 317, 826, 319, 827, 829, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 1015, 503, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[10, 522, 12, 524, 18, 530, 1022, 535, 23, 31, 543, 32, 33, 544, 35, 36, 37, 545, 547, 548, 549, 42, 554, 44, 556, 50, 562, 57, 58, 59, 569, 61, 570, 63, 571, 573, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 247, 759, 254, 766, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 314, 315, 825, 317, 826, 319, 827, 829, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 1015, 503, 510], NumPruned=104448]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 58, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 247, 254], NumPruned=0]
125460 parameters will be pruned
-------------

2024-08-01 10:38:41.756 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(820, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=83640]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 36, 40, 42, 45, 46, 51, 53, 58, 65, 70, 80, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 215, 216, 217, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 353, 356, 357, 363, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 458, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=26112]
109956 parameters will be pruned
-------------

2024-08-01 10:38:41.759 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 5689903

2024-08-01 10:38:41.799 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-08-02 15:04:51.039 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=648]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=3456]
4116 parameters will be pruned
-------------

2024-08-02 15:04:51.041 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(26, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=2808]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
3600 parameters will be pruned
-------------

2024-08-02 15:04:51.043 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=1728]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=192]
2640 parameters will be pruned
-------------

2024-08-02 15:04:51.044 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 14, 25], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 58])>, Index=[31, 32, 35, 37, 40, 51], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(58, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[31, 32, 35, 37, 40, 51], NumPruned=384]
708 parameters will be pruned
-------------

2024-08-02 15:04:51.045 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=624]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=13824]
14472 parameters will be pruned
-------------

2024-08-02 15:04:51.047 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(52, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=11700]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
14950 parameters will be pruned
-------------

2024-08-02 15:04:51.048 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
18204 parameters will be pruned
-------------

2024-08-02 15:04:51.050 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 116])>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(116, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=1536]
2796 parameters will be pruned
-------------

2024-08-02 15:04:51.051 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(104, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 57, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 108, 122, 123, 124], NumPruned=2600]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 57, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 108, 122, 123, 124], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 57, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 108, 122, 123, 124], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 57, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 108, 122, 123, 124], NumPruned=57600]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 185, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 236, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 185, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 236, 250, 251, 252], NumPruned=1600]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 185, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 236, 250, 251, 252], NumPruned=1600]
63450 parameters will be pruned
-------------

2024-08-02 15:04:51.053 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(103, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=47277]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
60435 parameters will be pruned
-------------

2024-08-02 15:04:51.055 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=6400]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=3200]
107725 parameters will be pruned
-------------

2024-08-02 15:04:51.057 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 8, 10, 31, 32, 33, 35, 48, 49, 52, 55, 60, 61, 73, 74, 78, 82, 86, 89, 94, 96, 102, 112, 122, 125], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 8, 10, 31, 32, 33, 35, 48, 49, 52, 55, 60, 61, 73, 74, 78, 82, 86, 89, 94, 96, 102, 112, 122, 125], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 8, 10, 31, 32, 33, 35, 48, 49, 52, 55, 60, 61, 73, 74, 78, 82, 86, 89, 94, 96, 102, 112, 122, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 103, 231])>, Index=[110, 111, 113, 134, 135, 136, 138, 151, 152, 155, 158, 163, 164, 176, 177, 181, 185, 189, 192, 197, 199, 205, 215, 225, 228], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(231, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[110, 111, 113, 134, 135, 136, 138, 151, 152, 155, 158, 163, 164, 176, 177, 181, 185, 189, 192, 197, 199, 205, 215, 225, 228], NumPruned=6400]
11575 parameters will be pruned
-------------

2024-08-02 15:04:51.059 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(206, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[8, 9, 11, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 76, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=10506]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[8, 9, 11, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 76, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[8, 9, 11, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 76, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[8, 9, 11, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 76, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[264, 265, 267, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 332, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[264, 265, 267, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 332, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[264, 265, 267, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 332, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
258672 parameters will be pruned
-------------

2024-08-02 15:04:51.067 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(205, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=188190]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
240618 parameters will be pruned
-------------

2024-08-02 15:04:51.069 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=13056]
177786 parameters will be pruned
-------------

2024-08-02 15:04:51.073 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 6, 16, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 6, 16, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 6, 16, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 205, 461])>, Index=[205, 206, 208, 211, 221, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(461, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[205, 206, 208, 211, 221, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=26112]
47124 parameters will be pruned
-------------

2024-08-02 15:04:51.074 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(410, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 123, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 205, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 323, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 417, 419, 423, 424, 425, 426, 438, 439, 442, 459, 462, 464, 469, 477, 478, 482, 495, 511], NumPruned=41820]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 123, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 205, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 323, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 417, 419, 423, 424, 425, 426, 438, 439, 442, 459, 462, 464, 469, 477, 478, 482, 495, 511], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 123, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 205, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 323, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 417, 419, 423, 424, 425, 426, 438, 439, 442, 459, 462, 464, 469, 477, 478, 482, 495, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 123, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 205, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 323, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 417, 419, 423, 424, 425, 426, 438, 439, 442, 459, 462, 464, 469, 477, 478, 482, 495, 511], NumPruned=26112]
68136 parameters will be pruned
-------------

2024-08-02 15:04:51.079 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[519, 7, 10, 522, 12, 524, 18, 530, 1022, 535, 23, 543, 32, 33, 544, 35, 36, 37, 545, 31, 547, 548, 42, 549, 44, 554, 556, 50, 562, 57, 569, 59, 571, 61, 573, 63, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 184, 696, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 254, 766, 263, 775, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 825, 315, 827, 317, 829, 319, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 440, 952, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[519, 7, 10, 522, 12, 524, 18, 530, 1022, 535, 23, 543, 32, 33, 544, 35, 36, 37, 545, 31, 547, 548, 42, 549, 44, 554, 556, 50, 562, 57, 569, 59, 571, 61, 573, 63, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 184, 696, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 254, 766, 263, 775, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 825, 315, 827, 317, 829, 319, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 440, 952, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 510], NumPruned=104448]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=0]
125460 parameters will be pruned
-------------

2024-08-02 15:04:51.081 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(820, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 39, 40, 42, 45, 46, 51, 53, 58, 65, 70, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 205, 215, 216, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 349, 353, 356, 357, 363, 366, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=83640]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 4, 5, 6, 7, 15, 24, 39, 40, 42, 45, 46, 51, 53, 58, 65, 70, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 205, 215, 216, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 349, 353, 356, 357, 363, 366, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 4, 5, 6, 7, 15, 24, 39, 40, 42, 45, 46, 51, 53, 58, 65, 70, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 205, 215, 216, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 349, 353, 356, 357, 363, 366, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 39, 40, 42, 45, 46, 51, 53, 58, 65, 70, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 205, 215, 216, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 349, 353, 356, 357, 363, 366, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=26112]
109956 parameters will be pruned
-------------

2024-08-02 15:04:51.083 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 5689903

2024-08-02 15:04:51.125 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-08-03 09:50:58.170 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=648]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 25, 27, 28, 29, 30], NumPruned=3456]
4116 parameters will be pruned
-------------

2024-08-03 09:50:58.173 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(26, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=2808]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 13, 14, 15, 20, 21, 26, 28, 30, 41, 55, 60], NumPruned=384]
3600 parameters will be pruned
-------------

2024-08-03 09:50:58.174 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=12]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=1728]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[3, 13, 15, 21, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=384]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 13, 15, 21, 30, 31], NumPruned=192]
2640 parameters will be pruned
-------------

2024-08-03 09:50:58.176 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(52, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=312]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 14, 25], NumPruned=12]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 14, 25], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 26, 58])>, Index=[31, 32, 35, 37, 40, 51], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(58, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[31, 32, 35, 37, 40, 51], NumPruned=384]
708 parameters will be pruned
-------------

2024-08-03 09:50:58.177 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=624]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 5, 6, 8, 17, 21, 32, 40, 49, 55, 60, 61], NumPruned=13824]
14472 parameters will be pruned
-------------

2024-08-03 09:50:58.178 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(52, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=11700]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 15, 31, 40, 45, 49, 54, 56, 57, 61, 66, 72, 83, 87, 90, 91, 93, 98, 114, 115, 116, 118, 120, 123, 127], NumPruned=1600]
14950 parameters will be pruned
-------------

2024-08-03 09:50:58.180 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=6912]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=1536]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[11, 12, 18, 22, 43, 48, 50, 52, 57, 60, 61, 63], NumPruned=768]
18204 parameters will be pruned
-------------

2024-08-03 09:50:58.182 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(103, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=1236]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 11, 24, 26, 27, 31, 32, 41, 44, 58, 60, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 52, 116])>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(116, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[53, 63, 76, 78, 79, 83, 84, 93, 96, 110, 112, 115], NumPruned=1536]
2796 parameters will be pruned
-------------

2024-08-03 09:50:58.183 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(104, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 57, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 108, 122, 123, 124], NumPruned=2600]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 57, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 108, 122, 123, 124], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 57, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 108, 122, 123, 124], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[5, 10, 16, 21, 45, 47, 52, 54, 57, 66, 68, 70, 77, 78, 85, 88, 92, 93, 95, 96, 102, 108, 122, 123, 124], NumPruned=57600]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 185, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 236, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 185, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 236, 250, 251, 252], NumPruned=1600]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[133, 138, 144, 149, 173, 175, 180, 182, 185, 194, 196, 198, 205, 206, 213, 216, 220, 221, 223, 224, 230, 236, 250, 251, 252], NumPruned=1600]
63450 parameters will be pruned
-------------

2024-08-03 09:50:58.185 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.5.conv (Conv2d(103, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=47277]
[ <DEP: prune_conv => prune_batchnorm on model.5.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv1.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.cv2.conv (Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[19, 31, 39, 49, 56, 71, 72, 75, 76, 82, 95, 97, 98, 99, 105, 106, 118, 120, 121, 122, 134, 151, 157, 161, 162, 166, 169, 170, 171, 174, 178, 180, 182, 183, 191, 194, 200, 204, 206, 215, 216, 217, 218, 223, 243, 244, 247, 248, 251, 254, 255], NumPruned=6528]
60435 parameters will be pruned
-------------

2024-08-03 09:50:58.188 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv1.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv1.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.0.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.0.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.1.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.1.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.6.m.2.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.6.m.2.cv2.conv (Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=28800]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=6400]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.2.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.1.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.6.m.0.cv1.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 7, 8, 10, 11, 15, 17, 21, 28, 29, 41, 53, 54, 60, 64, 66, 69, 71, 80, 89, 91, 93, 97, 118, 123], NumPruned=3200]
107725 parameters will be pruned
-------------

2024-08-03 09:50:58.195 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv2.conv (Conv2d(205, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 8, 10, 31, 32, 33, 35, 48, 49, 52, 55, 60, 61, 73, 74, 78, 82, 86, 89, 94, 96, 102, 112, 122, 125], NumPruned=5125]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv2.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 8, 10, 31, 32, 33, 35, 48, 49, 52, 55, 60, 61, 73, 74, 78, 82, 86, 89, 94, 96, 102, 112, 122, 125], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 8, 10, 31, 32, 33, 35, 48, 49, 52, 55, 60, 61, 73, 74, 78, 82, 86, 89, 94, 96, 102, 112, 122, 125], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 103, 231])>, Index=[110, 111, 113, 134, 135, 136, 138, 151, 152, 155, 158, 163, 164, 176, 177, 181, 185, 189, 192, 197, 199, 205, 215, 225, 228], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.6.cv3.conv (Conv2d(231, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[110, 111, 113, 134, 135, 136, 138, 151, 152, 155, 158, 163, 164, 176, 177, 181, 185, 189, 192, 197, 199, 205, 215, 225, 228], NumPruned=6400]
11575 parameters will be pruned
-------------

2024-08-03 09:50:58.197 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.6.cv3.conv (Conv2d(206, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[8, 9, 11, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 76, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=10506]
[ <DEP: prune_conv => prune_batchnorm on model.6.cv3.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[8, 9, 11, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 76, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[8, 9, 11, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 76, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.7.conv (Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[8, 9, 11, 14, 16, 20, 22, 24, 25, 31, 47, 55, 59, 67, 72, 73, 76, 79, 89, 92, 102, 104, 107, 114, 120, 122, 123, 125, 132, 135, 145, 151, 176, 177, 179, 181, 183, 195, 197, 209, 213, 215, 219, 225, 227, 228, 232, 246, 250, 251, 252], NumPruned=235008]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[264, 265, 267, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 332, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv1.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[264, 265, 267, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 332, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
[ <DEP: _prune_concat => prune_related_conv on model.13.cv2.conv (Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[264, 265, 267, 270, 272, 276, 278, 280, 281, 287, 303, 311, 315, 323, 328, 329, 332, 335, 345, 348, 358, 360, 363, 370, 376, 378, 379, 381, 388, 391, 401, 407, 432, 433, 435, 437, 439, 451, 453, 465, 469, 471, 475, 481, 483, 484, 488, 502, 506, 507, 508], NumPruned=6528]
258672 parameters will be pruned
-------------

2024-08-03 09:50:58.204 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.7.conv (Conv2d(205, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=188190]
[ <DEP: prune_conv => prune_batchnorm on model.7.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.cv2.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 2, 11, 16, 20, 21, 22, 23, 29, 33, 35, 36, 38, 39, 42, 54, 60, 71, 77, 90, 93, 96, 97, 100, 103, 109, 110, 111, 118, 120, 136, 139, 146, 147, 148, 149, 150, 153, 154, 159, 160, 161, 163, 165, 173, 176, 177, 190, 202, 207, 208, 209, 211, 213, 230, 240, 242, 245, 255, 258, 265, 279, 282, 297, 303, 305, 309, 314, 328, 330, 338, 342, 347, 351, 353, 354, 360, 361, 364, 376, 377, 389, 395, 396, 398, 414, 425, 427, 428, 444, 445, 450, 456, 460, 461, 469, 476, 491, 496, 501, 503, 508], NumPruned=26112]
240618 parameters will be pruned
-------------

2024-08-03 09:50:58.206 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.8.m.0.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=102]
[ <DEP: prune_batchnorm => prune_conv on model.8.m.0.cv2.conv (Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512])>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=26112]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.8.m.0.cv1.conv (Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 9, 10, 11, 15, 17, 25, 31, 36, 45, 58, 62, 77, 79, 89, 92, 93, 108, 109, 110, 112, 118, 122, 128, 131, 137, 138, 139, 140, 164, 166, 169, 170, 174, 177, 182, 185, 193, 194, 197, 200, 202, 209, 215, 218, 219, 224, 226, 231, 237, 253], NumPruned=13056]
177786 parameters will be pruned
-------------

2024-08-03 09:50:58.209 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv2.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 6, 16, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv2.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 6, 16, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 6, 16, 17, 18, 30, 32, 40, 43, 44, 47, 54, 64, 65, 67, 68, 78, 96, 107, 111, 115, 117, 120, 121, 122, 123, 128, 134, 162, 165, 171, 172, 176, 186, 187, 188, 189, 191, 197, 204, 208, 210, 218, 219, 225, 228, 229, 243, 255], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 205, 461])>, Index=[205, 206, 208, 211, 221, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.8.cv3.conv (Conv2d(461, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[205, 206, 208, 211, 221, 222, 223, 235, 237, 245, 248, 249, 252, 259, 269, 270, 272, 273, 283, 301, 312, 316, 320, 322, 325, 326, 327, 328, 333, 339, 367, 370, 376, 377, 381, 391, 392, 393, 394, 396, 402, 409, 413, 415, 423, 424, 430, 433, 434, 448, 460], NumPruned=26112]
47124 parameters will be pruned
-------------

2024-08-03 09:50:58.211 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.8.cv3.conv (Conv2d(410, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 123, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 205, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 323, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 417, 419, 423, 424, 425, 426, 438, 439, 442, 459, 462, 464, 469, 477, 478, 482, 495, 511], NumPruned=41820]
[ <DEP: prune_conv => prune_batchnorm on model.8.cv3.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 123, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 205, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 323, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 417, 419, 423, 424, 425, 426, 438, 439, 442, 459, 462, 464, 469, 477, 478, 482, 495, 511], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 123, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 205, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 323, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 417, 419, 423, 424, 425, 426, 438, 439, 442, 459, 462, 464, 469, 477, 478, 482, 495, 511], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.9.cv1.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[4, 5, 7, 10, 14, 23, 48, 67, 72, 74, 80, 88, 91, 95, 96, 98, 99, 104, 123, 138, 139, 146, 147, 155, 165, 167, 171, 175, 178, 190, 192, 196, 197, 202, 203, 205, 209, 218, 220, 225, 226, 227, 228, 232, 240, 242, 250, 265, 268, 273, 275, 277, 283, 285, 289, 291, 292, 297, 302, 303, 306, 309, 310, 311, 314, 323, 326, 330, 334, 339, 341, 343, 348, 355, 360, 364, 365, 371, 372, 379, 381, 387, 406, 409, 417, 419, 423, 424, 425, 426, 438, 439, 442, 459, 462, 464, 469, 477, 478, 482, 495, 511], NumPruned=26112]
68136 parameters will be pruned
-------------

2024-08-03 09:50:58.215 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv1.conv (Conv2d(410, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=20910]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv1.bn (BatchNorm2d(256, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 256, 512, 768, 1024])>, Index=[519, 7, 10, 522, 12, 524, 18, 530, 1022, 535, 23, 543, 32, 33, 544, 35, 36, 37, 545, 31, 547, 548, 42, 549, 44, 554, 556, 50, 562, 57, 569, 59, 571, 61, 573, 63, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 184, 696, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 254, 766, 263, 775, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 825, 315, 827, 317, 829, 319, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 440, 952, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 510], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.9.cv2.conv (Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[519, 7, 10, 522, 12, 524, 18, 530, 1022, 535, 23, 543, 32, 33, 544, 35, 36, 37, 545, 31, 547, 548, 42, 549, 44, 554, 556, 50, 562, 57, 569, 59, 571, 61, 573, 63, 575, 69, 581, 74, 586, 79, 591, 99, 611, 102, 103, 104, 614, 615, 616, 117, 118, 629, 630, 138, 650, 141, 653, 152, 664, 159, 671, 162, 674, 169, 170, 681, 682, 173, 685, 176, 688, 184, 696, 188, 700, 193, 705, 196, 708, 199, 711, 207, 719, 210, 722, 215, 216, 727, 728, 221, 733, 225, 226, 737, 738, 233, 745, 237, 749, 254, 766, 263, 775, 266, 778, 268, 780, 274, 786, 279, 791, 287, 288, 289, 799, 291, 292, 293, 800, 801, 803, 804, 298, 805, 300, 810, 812, 306, 818, 313, 825, 315, 827, 317, 829, 319, 831, 325, 837, 330, 842, 335, 847, 355, 867, 358, 359, 360, 870, 871, 872, 373, 374, 885, 886, 394, 906, 397, 909, 408, 920, 415, 927, 418, 930, 425, 426, 937, 938, 429, 941, 432, 944, 440, 952, 444, 956, 449, 961, 452, 964, 455, 967, 463, 975, 466, 978, 471, 472, 983, 984, 477, 989, 481, 482, 993, 994, 489, 1001, 493, 1005, 510], NumPruned=104448]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[7, 10, 12, 18, 23, 31, 32, 33, 35, 36, 37, 42, 44, 50, 57, 59, 61, 63, 69, 74, 79, 99, 102, 103, 104, 117, 118, 138, 141, 152, 159, 162, 169, 170, 173, 176, 184, 188, 193, 196, 199, 207, 210, 215, 216, 221, 225, 226, 233, 237, 254], NumPruned=0]
125460 parameters will be pruned
-------------

2024-08-03 09:50:58.222 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.9.cv2.conv (Conv2d(820, 512, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 39, 40, 42, 45, 46, 51, 53, 58, 65, 70, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 205, 215, 216, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 349, 353, 356, 357, 363, 366, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=83640]
[ <DEP: prune_conv => prune_batchnorm on model.9.cv2.bn (BatchNorm2d(512, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 4, 5, 6, 7, 15, 24, 39, 40, 42, 45, 46, 51, 53, 58, 65, 70, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 205, 215, 216, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 349, 353, 356, 357, 363, 366, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=204]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 4, 5, 6, 7, 15, 24, 39, 40, 42, 45, 46, 51, 53, 58, 65, 70, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 205, 215, 216, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 349, 353, 356, 357, 363, 366, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.10.conv (Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 4, 5, 6, 7, 15, 24, 39, 40, 42, 45, 46, 51, 53, 58, 65, 70, 81, 86, 87, 91, 97, 108, 109, 117, 125, 137, 144, 152, 154, 158, 160, 163, 168, 170, 171, 175, 184, 188, 205, 215, 216, 218, 223, 225, 237, 238, 247, 250, 251, 255, 256, 258, 264, 265, 266, 271, 272, 276, 277, 278, 283, 286, 287, 317, 318, 323, 332, 334, 344, 345, 349, 353, 356, 357, 363, 366, 368, 369, 378, 394, 395, 398, 403, 410, 414, 416, 427, 432, 441, 449, 470, 476, 478, 487, 488, 489, 494, 496, 497, 498, 508], NumPruned=26112]
109956 parameters will be pruned
-------------

2024-08-03 09:50:58.224 | INFO     | __main__:layer_pruning:77 -   Params: 7022326 => 5689903

2024-08-03 09:50:58.268 | INFO     | __main__:layer_pruning:91 - ¼ôÖ¦Íê³É

2024-08-03 09:52:52.588 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.0.conv (Conv2d(3, 32, kernel_size=(6, 6), stride=(2, 2), padding=(2, 2), bias=False))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=1296]
[ <DEP: prune_conv => prune_batchnorm on model.0.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.1.conv (Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 13, 14, 17, 21, 22, 25, 27, 28, 29, 30], NumPruned=6912]
8232 parameters will be pruned
-------------

2024-08-03 09:52:52.590 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.1.conv (Conv2d(20, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=4500]
[ <DEP: prune_conv => prune_batchnorm on model.1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv1.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=800]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.cv2.conv (Conv2d(64, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 2, 5, 8, 9, 10, 13, 14, 15, 21, 22, 26, 28, 30, 31, 33, 35, 38, 41, 49, 55, 60, 61, 63], NumPruned=800]
6150 parameters will be pruned
-------------

2024-08-03 09:52:52.591 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv1.conv (Conv2d(39, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=468]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv1.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.2.m.0.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=24]
[ <DEP: prune_batchnorm => prune_conv on model.2.m.0.cv2.conv (Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=3456]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 32, 64])>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=768]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.2.m.0.cv1.conv (Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 1, 3, 12, 13, 15, 19, 20, 26, 27, 30, 31], NumPruned=384]
5124 parameters will be pruned
-------------

2024-08-03 09:52:52.595 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv2.conv (Conv2d(39, 32, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=468]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv2.bn (BatchNorm2d(32, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=24]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[5, 6, 9, 11, 13, 14, 15, 18, 22, 25, 27, 28], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 20, 52])>, Index=[25, 26, 29, 31, 33, 34, 35, 38, 42, 45, 47, 48], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.2.cv3.conv (Conv2d(52, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[25, 26, 29, 31, 33, 34, 35, 38, 42, 45, 47, 48], NumPruned=768]
1260 parameters will be pruned
-------------

2024-08-03 09:52:52.596 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.2.cv3.conv (Conv2d(40, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=1000]
[ <DEP: prune_conv => prune_batchnorm on model.2.cv3.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.3.conv (Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[0, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18, 21, 23, 29, 32, 40, 46, 49, 50, 53, 54, 55, 60, 61], NumPruned=28800]
29850 parameters will be pruned
-------------

2024-08-03 09:52:52.598 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.3.conv (Conv2d(39, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[3, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127], NumPruned=17901]
[ <DEP: prune_conv => prune_batchnorm on model.3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[3, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[3, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv1.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127], NumPruned=3264]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.cv2.conv (Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[3, 7, 13, 15, 21, 22, 25, 31, 33, 37, 39, 40, 45, 46, 48, 49, 54, 56, 57, 58, 61, 66, 68, 71, 72, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 97, 98, 102, 109, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 127], NumPruned=3264]
24531 parameters will be pruned
-------------

2024-08-03 09:52:52.599 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv1.conv (Conv2d(77, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1925]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv1.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.0.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.0.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=14400]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_elementwise_op on _ElementWiseOp()>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_batchnorm on model.4.m.1.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=50]
[ <DEP: prune_batchnorm => prune_conv on model.4.m.1.cv2.conv (Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=14400]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 64, 128])>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=3200]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.1.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1600]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.4.m.0.cv1.conv (Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[2, 7, 8, 11, 12, 18, 20, 22, 28, 30, 32, 39, 42, 43, 45, 46, 47, 48, 50, 52, 57, 59, 60, 61, 63], NumPruned=1600]
37275 parameters will be pruned
-------------

2024-08-03 09:52:52.602 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv2.conv (Conv2d(77, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 5, 6, 11, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 61, 62, 63], NumPruned=1925]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv2.bn (BatchNorm2d(64, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 5, 6, 11, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 61, 62, 63], NumPruned=50]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 5, 6, 11, 16, 18, 22, 24, 26, 27, 31, 32, 38, 40, 41, 42, 44, 45, 52, 57, 58, 60, 61, 62, 63], NumPruned=0]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 39, 103])>, Index=[40, 44, 45, 50, 55, 57, 61, 63, 65, 66, 70, 71, 77, 79, 80, 81, 83, 84, 91, 96, 97, 99, 100, 101, 102], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.4.cv3.conv (Conv2d(103, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[40, 44, 45, 50, 55, 57, 61, 63, 65, 66, 70, 71, 77, 79, 80, 81, 83, 84, 91, 96, 97, 99, 100, 101, 102], NumPruned=3200]
5175 parameters will be pruned
-------------

2024-08-03 09:52:52.603 | INFO     | __main__:layer_pruning:71 - 
-------------
[ <DEP: prune_conv => prune_conv on model.4.cv3.conv (Conv2d(78, 128, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 10, 16, 17, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 64, 66, 68, 69, 70, 72, 77, 79, 80, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=3978]
[ <DEP: prune_conv => prune_batchnorm on model.4.cv3.bn (BatchNorm2d(128, eps=0.001, momentum=0.03, affine=True, track_running_stats=True))>, Index=[1, 3, 5, 6, 10, 16, 17, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 64, 66, 68, 69, 70, 72, 77, 79, 80, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=102]
[ <DEP: prune_batchnorm => _prune_elementwise_op on _ElementWiseOp()>, Index=[1, 3, 5, 6, 10, 16, 17, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 64, 66, 68, 69, 70, 72, 77, 79, 80, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=0]
[ <DEP: _prune_elementwise_op => prune_related_conv on model.5.conv (Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False))>, Index=[1, 3, 5, 6, 10, 16, 17, 20, 21, 23, 29, 32, 34, 40, 45, 47, 49, 52, 53, 54, 56, 57, 59, 60, 64, 66, 68, 69, 70, 72, 77, 79, 80, 85, 88, 92, 93, 94, 95, 96, 97, 102, 107, 108, 113, 115, 120, 122, 123, 124, 126], NumPruned=117504]
[ <DEP: _prune_elementwise_op => _prune_concat on _ConcatOp([0, 128, 256])>, Index=[129, 131, 133, 134, 138, 144, 145, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 192, 194, 196, 197, 198, 200, 205, 207, 208, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=0]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv1.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 138, 144, 145, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 192, 194, 196, 197, 198, 200, 205, 207, 208, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=3264]
[ <DEP: _prune_concat => prune_related_conv on model.17.cv2.conv (Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False))>, Index=[129, 131, 133, 134, 138, 144, 145, 148, 149, 151, 157, 160, 162, 168, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 192, 194, 196, 197, 198, 200, 205, 207, 208, 213, 216, 220, 221, 222, 223, 224, 225, 230, 235, 236, 241, 243, 248, 250, 251, 252, 254], NumPruned=3264]
128112 parameters will be pruned
-------------

